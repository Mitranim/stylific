/**
 * sf-icon is a container for icons with background images, such as data-encoded
 * SVG. It doesn't display anything until you add a background-image rule
 * through CSS or via an inline style attribute.
 *
 * Example usage.
 *
 * In your LESS stylesheet:
 *
 *   sf-icon.skype {
 *     background-image: data-uri(path-to-skype-icon.svg);
 *   }
 *
 * If LESS finds the file, it'll encode it as base64 and embed in your compiled
 * stylesheet, otherwise it'll just produce a url() rule with the given path.
 *
 * In your HTML:
 *
 *   <sf-icon class="skype"></sf-icon>
 *
 * sf-icon is sized as 1em by default, which means it'll be the same size as
 * surrounding text. To scale it separately, use a bigger font-size:
 *
 *   <sf-icon style="font-size: 1.2em"></sf-icon>
 */

/**
 * ToDo.
 *
 * Document usage.
 */

@{sf-prefix}-icon {

  /**
   * Layout.
   */
  // inline-block is needed so we can define dimensions on this element. We need
  // that because background-image doesn't have its own dimensions. You may
  // override this with any display rule of your choosing except for inline.
  display: inline-block;
  // Expect a square icon. Size in 1em to scale with the surrounding font.
  width: 1em;
  height: 1em;

  /**
   * Background styling.
   */
  // Stretch the icon to fill the available space.
  background-size: contain;
  // Center the icon both horizontally and vertically.
  background-position: 50% 50%;
  // Make sure it doesn't repeat.
  background-repeat: no-repeat;

  /**
   * Version that loses its hue and darkens until hovered or otherwise
   * activated.
   */
  &.dark {
    // Animate all property transitions.
    .sf-common-transitions-all();
    &:not(:hover):not(:focus):not(:active):not(.active) {
      filter: grayscale(1) brightness(0.2);
    }
  }

  /**
   * Version that pops on activation.
   */
  &.pop {
    // Animate all property transitions.
    .sf-common-transitions-all();
    // Pop when activated.
    &:hover, &:focus, &:active, &.active {
      transform: scale(1.5);
    }
  }

}
