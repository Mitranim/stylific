@import (less) '../variables';
@import (less) '../mixins';

/**
 * <sf-collapse> is a vertically collapsing element with a toggle.
 *
 *
 * # Basic usage
 *
 * Must have the exact following layout:
 *
 *   <sf-collapse>
 *     <input id="..." type="checkbox">
 *     <label for="...">...</label>
 *     ...
 *   </sf-collapse>
 *
 * The <input> is hidden and serves as a state vector. The [id] and [for]
 * attributes must match. The <label> may have arbitrary content. The collapsing
 * part is everything following the label.
 *
 * Mark the <input> as [checked] to uncollapse the element by default:
 *
 *   <sf-collapse>
 *     <input checked id="..." type="checkbox">
 *     <label for="...">...</label>
 *     ...
 *   </sf-collapse>
 *
 *
 * # Options
 *
 * Has an option to enable an overlay that collapses the element when clicking
 * anywhere outside.
 *
 *   <sf-collapse sf-overlay>
 *     ...
 *   </sf-collapse>
 */

@{sf-prefix}-collapse {.sf-collapse()}
.sf-collapse() {

  // Local variables.
  @overlay-attr: ~'@{sf-prefix}-overlay';

  /**
   * Layout.
   */
  display: flex;
  flex-direction: column;

  // Hide the checkbox input used for toggling collapsed state.
  > input[type=checkbox] {display: none}

  /**
   * Base label styles.
   */
  > input[type=checkbox] + label {
    /**
     * Layout.
     */
    display: block;

    // Cosmetic.
    cursor: pointer;

    // Toggle indicator.
    &::after {
      content: '▽';
      display: inline-block;
      vertical-align: middle;
      opacity: 0.5;
    }
    // If there's some text inside, offset the indicator.
    &:not(:empty)::after {
      padding-left: 0.5em;
    }
  }
  // Use interactive colours for the label.
  .sf-colormix-all-states(~' > input[type=checkbox] + label', true);

  /**
   * Active label styles.
   */
  > input[type=checkbox]:checked + label {
    // Modify the indicator symbol.
    &::after {content: '▲'}
  }
  // Use activated colours for the "active" label.
  .sf-colormix-all-classes(~' > input[type=checkbox]:checked + label', ~'', @sf-delta-activated);
  .sf-colormix-all-classes(~' > input[type=checkbox]:checked + label:hover', ~'', @sf-delta-activated);

  /**
   * Base overlay styles.
   */
  &[@{overlay-attr}] > input[type=checkbox] + label::before {
    .sf-fixed-overlay();
    opacity: 0;
  }

  /**
   * Active overlay styles.
   */
  // If the overlay option is enabled, make the toggle overlay interactive.
  &[@{overlay-attr}] > input[type=checkbox]:checked + label {
    &::before {content: ''}
  }

  /**
   * Styles for collapsable children.
   */
  // Use static colours for children.
  .sf-colormix-all-states(~' > *', false);
  // Collapsed styles.
  > input[type=checkbox]:not(:checked) + label ~ * {
    padding: 0;
    max-height: 0;
    transform: scaleY(0);
  }
  // Active styles.
  > input[type=checkbox]:checked + label ~ * {
    transform: scaleY(1);
  }

  // Disable article link style.
  @{sf-prefix}-article & {
    :link {border: none}
  }

  // Animate visibility changes and other transitions on all children.
  > * {.sf-common-transitions-all()}
}
