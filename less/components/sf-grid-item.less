@import (less) '../variables';
@import (less) '../mixins';

/**
 * <sf-grid>
 *   ...
 *   <sf-grid-item>...</sf-grid-item>
 *   ...
 * </sf-grid>
 */

/**
 * ToDo.
 *
 * The active style must be an inverse of the current colour class, or the
 * base inverse without a colour class. In the absence of own colour class,
 * needs to respond to that of the parent (this will be limited to sf-grid
 * since the rule needs to be defined in the parent element styles).
 */

@{sf-prefix}-grid-item {.sf-grid-item()}
.sf-grid-item() {

  /**
   * Layout.
   */
  display: block;

  // Cosmetic.
  padding: @sf-grid-item-padding;

  /**
   * Immediate child styling.
   */
  > * {
    // Whitespace.
    &:not(:first-child) {padding-top: @sf-grid-item-padding}
  }

  // Active style.
  &.active {
    .sf-image-backdrop();
    &, a {color: @sf-bright}
  }

  // Image preview styles.
  .preview {
    /**
     * Layout.
     */
    display: block;
    width: 100%;
    height: 8em;

    // Backdrop.
    .sf-background-cover();
    .sf-image-backdrop();
  }

}
