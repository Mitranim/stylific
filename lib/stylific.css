@charset "UTF-8";
/********************************** General **********************************/
/**
 * Credit:
 * https://github.com/angular/material/blob/v0.10.0/src/core/style/variables.scss
 */
/******************************** colors.scss ********************************/
/**
 * Theme colours.
 */
/**
 * Static colours.
 */
/******************************** layout.scss ********************************/
/******************************** mixins.scss ********************************/
/****************************** typography.scss ******************************/
/**
 * rem sizing for the <html> element. The common baseline is 12pt = 16px =
 * 1em. We need to declare rem in pixels or points in order to have consistent
 * font scaling between various native elements.
 */
/****************************** sf-navbar.scss *******************************/
/****************************** sf-footer.scss *******************************/
/******************************* sf-jumbo.scss *******************************/
/****************************** sf-tabset.scss *******************************/
/****************************** sf-tooltip.scss ******************************/
/**
 * http://compass-style.org/reference/compass/utilities/color/brightness/#function-brightness
 */
/*********************************** Media ***********************************/
/********************************** Colors ***********************************/
/**
 * See notes in colors.scss.
 */
/*********************************** Misc ************************************/
/********************************** Global ***********************************/
html {
  width: 100%;
  height: 100%; }

*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0; }

body {
  /**
   * Layout.
   */
  max-width: 960px;
  margin-left: auto;
  margin-right: auto;
  min-height: 100%;
  /**
   * Inner layout.
   */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start; }

/********************************** Layout ***********************************/
/**
 * Credit:
 * https://raw.githubusercontent.com/angular/material/v0.10.0/src/core/style/layout.scss
 */
/**
 * Container.
 */
[layout] {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

[layout~=row] {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row; }

[layout~=column] {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

[layout~=wrap] {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }

[layout~=wrap-reverse] {
  -webkit-flex-wrap: wrap-reverse;
      -ms-flex-wrap: wrap-reverse;
          flex-wrap: wrap-reverse; }

[layout~=nowrap] {
  -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap; }

[layout~=center] {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

[layout~=end] {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

[layout~=start] {
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start; }

[layout~=space-around] {
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around; }

[layout~=space-between] {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

[layout~=cross-center] {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

[layout~=cross-end] {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
          align-items: flex-end; }

[layout~=cross-start] {
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start; }

[layout~=cross-stretch] {
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }

[layout~=lines-center] {
  -webkit-align-content: center;
      -ms-flex-line-pack: center;
          align-content: center; }

[layout~=lines-end] {
  -webkit-align-content: flex-end;
      -ms-flex-line-pack: end;
          align-content: flex-end; }

[layout~=lines-start] {
  -webkit-align-content: flex-start;
      -ms-flex-line-pack: start;
          align-content: flex-start; }

[layout~=lines-space-around] {
  -webkit-align-content: space-around;
      -ms-flex-line-pack: distribute;
          align-content: space-around; }

[layout~=lines-space-between] {
  -webkit-align-content: space-between;
      -ms-flex-line-pack: justify;
          align-content: space-between; }

[layout~=lines-stretch] {
  -webkit-align-content: stretch;
      -ms-flex-line-pack: stretch;
          align-content: stretch; }

[layout~=space-out]:not([layout~=column]) > *:not(:last-child),
[layout~=column][layout~=space-out-cross] > *:not(:last-child) {
  margin-right: 0.5rem; }

[layout~=space-out]:not([layout~=column]) > *:not(:first-child),
[layout~=column][layout~=space-out-cross] > *:not(:first-child) {
  margin-left: 0.5rem; }

[layout~=column][layout~=space-out] > *:not(:last-child),
[layout~=space-out-cross]:not([layout~=column]) > *:not(:last-child) {
  margin-bottom: 0.5rem; }

[layout~=column][layout~=space-out] > *:not(:first-child),
[layout~=space-out-cross]:not([layout~=column]) > *:not(:first-child) {
  margin-top: 0.5rem; }

@media (max-width: 599px) {
  [layout-sm] {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
  [layout-sm~=row] {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
        -ms-flex-direction: row;
            flex-direction: row; }
  [layout-sm~=column] {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column; }
  [layout-sm~=wrap] {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap; }
  [layout-sm~=wrap-reverse] {
    -webkit-flex-wrap: wrap-reverse;
        -ms-flex-wrap: wrap-reverse;
            flex-wrap: wrap-reverse; }
  [layout-sm~=nowrap] {
    -webkit-flex-wrap: nowrap;
        -ms-flex-wrap: nowrap;
            flex-wrap: nowrap; }
  [layout-sm~=center] {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center; }
  [layout-sm~=end] {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
        -ms-flex-pack: end;
            justify-content: flex-end; }
  [layout-sm~=start] {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
        -ms-flex-pack: start;
            justify-content: flex-start; }
  [layout-sm~=space-around] {
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around; }
  [layout-sm~=space-between] {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between; }
  [layout-sm~=cross-center] {
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center; }
  [layout-sm~=cross-end] {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
        -ms-flex-align: end;
            align-items: flex-end; }
  [layout-sm~=cross-start] {
    -webkit-box-align: start;
    -webkit-align-items: flex-start;
        -ms-flex-align: start;
            align-items: flex-start; }
  [layout-sm~=cross-stretch] {
    -webkit-box-align: stretch;
    -webkit-align-items: stretch;
        -ms-flex-align: stretch;
            align-items: stretch; }
  [layout-sm~=lines-center] {
    -webkit-align-content: center;
        -ms-flex-line-pack: center;
            align-content: center; }
  [layout-sm~=lines-end] {
    -webkit-align-content: flex-end;
        -ms-flex-line-pack: end;
            align-content: flex-end; }
  [layout-sm~=lines-start] {
    -webkit-align-content: flex-start;
        -ms-flex-line-pack: start;
            align-content: flex-start; }
  [layout-sm~=lines-space-around] {
    -webkit-align-content: space-around;
        -ms-flex-line-pack: distribute;
            align-content: space-around; }
  [layout-sm~=lines-space-between] {
    -webkit-align-content: space-between;
        -ms-flex-line-pack: justify;
            align-content: space-between; }
  [layout-sm~=lines-stretch] {
    -webkit-align-content: stretch;
        -ms-flex-line-pack: stretch;
            align-content: stretch; }
  [layout-sm~=space-out]:not([layout-sm~=column]) > *:not(:last-child),
  [layout-sm~=column][layout-sm~=space-out-cross] > *:not(:last-child) {
    margin-right: 0.5rem; }
  [layout-sm~=space-out]:not([layout-sm~=column]) > *:not(:first-child),
  [layout-sm~=column][layout-sm~=space-out-cross] > *:not(:first-child) {
    margin-left: 0.5rem; }
  [layout-sm~=column][layout-sm~=space-out] > *:not(:last-child),
  [layout-sm~=space-out-cross]:not([layout-sm~=column]) > *:not(:last-child) {
    margin-bottom: 0.5rem; }
  [layout-sm~=column][layout-sm~=space-out] > *:not(:first-child),
  [layout-sm~=space-out-cross]:not([layout-sm~=column]) > *:not(:first-child) {
    margin-top: 0.5rem; } }

@media (min-width: 600px) {
  [layout-md] {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
  [layout-md~=row] {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
        -ms-flex-direction: row;
            flex-direction: row; }
  [layout-md~=column] {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column; }
  [layout-md~=wrap] {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap; }
  [layout-md~=wrap-reverse] {
    -webkit-flex-wrap: wrap-reverse;
        -ms-flex-wrap: wrap-reverse;
            flex-wrap: wrap-reverse; }
  [layout-md~=nowrap] {
    -webkit-flex-wrap: nowrap;
        -ms-flex-wrap: nowrap;
            flex-wrap: nowrap; }
  [layout-md~=center] {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center; }
  [layout-md~=end] {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
        -ms-flex-pack: end;
            justify-content: flex-end; }
  [layout-md~=start] {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
        -ms-flex-pack: start;
            justify-content: flex-start; }
  [layout-md~=space-around] {
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around; }
  [layout-md~=space-between] {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between; }
  [layout-md~=cross-center] {
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center; }
  [layout-md~=cross-end] {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
        -ms-flex-align: end;
            align-items: flex-end; }
  [layout-md~=cross-start] {
    -webkit-box-align: start;
    -webkit-align-items: flex-start;
        -ms-flex-align: start;
            align-items: flex-start; }
  [layout-md~=cross-stretch] {
    -webkit-box-align: stretch;
    -webkit-align-items: stretch;
        -ms-flex-align: stretch;
            align-items: stretch; }
  [layout-md~=lines-center] {
    -webkit-align-content: center;
        -ms-flex-line-pack: center;
            align-content: center; }
  [layout-md~=lines-end] {
    -webkit-align-content: flex-end;
        -ms-flex-line-pack: end;
            align-content: flex-end; }
  [layout-md~=lines-start] {
    -webkit-align-content: flex-start;
        -ms-flex-line-pack: start;
            align-content: flex-start; }
  [layout-md~=lines-space-around] {
    -webkit-align-content: space-around;
        -ms-flex-line-pack: distribute;
            align-content: space-around; }
  [layout-md~=lines-space-between] {
    -webkit-align-content: space-between;
        -ms-flex-line-pack: justify;
            align-content: space-between; }
  [layout-md~=lines-stretch] {
    -webkit-align-content: stretch;
        -ms-flex-line-pack: stretch;
            align-content: stretch; }
  [layout-md~=space-out]:not([layout-md~=column]) > *:not(:last-child),
  [layout-md~=column][layout-md~=space-out-cross] > *:not(:last-child) {
    margin-right: 0.5rem; }
  [layout-md~=space-out]:not([layout-md~=column]) > *:not(:first-child),
  [layout-md~=column][layout-md~=space-out-cross] > *:not(:first-child) {
    margin-left: 0.5rem; }
  [layout-md~=column][layout-md~=space-out] > *:not(:last-child),
  [layout-md~=space-out-cross]:not([layout-md~=column]) > *:not(:last-child) {
    margin-bottom: 0.5rem; }
  [layout-md~=column][layout-md~=space-out] > *:not(:first-child),
  [layout-md~=space-out-cross]:not([layout-md~=column]) > *:not(:first-child) {
    margin-top: 0.5rem; } }

@media (min-width: 960px) {
  [layout-lg] {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
  [layout-lg~=row] {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
        -ms-flex-direction: row;
            flex-direction: row; }
  [layout-lg~=column] {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column; }
  [layout-lg~=wrap] {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap; }
  [layout-lg~=wrap-reverse] {
    -webkit-flex-wrap: wrap-reverse;
        -ms-flex-wrap: wrap-reverse;
            flex-wrap: wrap-reverse; }
  [layout-lg~=nowrap] {
    -webkit-flex-wrap: nowrap;
        -ms-flex-wrap: nowrap;
            flex-wrap: nowrap; }
  [layout-lg~=center] {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center; }
  [layout-lg~=end] {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
        -ms-flex-pack: end;
            justify-content: flex-end; }
  [layout-lg~=start] {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
        -ms-flex-pack: start;
            justify-content: flex-start; }
  [layout-lg~=space-around] {
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around; }
  [layout-lg~=space-between] {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between; }
  [layout-lg~=cross-center] {
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center; }
  [layout-lg~=cross-end] {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
        -ms-flex-align: end;
            align-items: flex-end; }
  [layout-lg~=cross-start] {
    -webkit-box-align: start;
    -webkit-align-items: flex-start;
        -ms-flex-align: start;
            align-items: flex-start; }
  [layout-lg~=cross-stretch] {
    -webkit-box-align: stretch;
    -webkit-align-items: stretch;
        -ms-flex-align: stretch;
            align-items: stretch; }
  [layout-lg~=lines-center] {
    -webkit-align-content: center;
        -ms-flex-line-pack: center;
            align-content: center; }
  [layout-lg~=lines-end] {
    -webkit-align-content: flex-end;
        -ms-flex-line-pack: end;
            align-content: flex-end; }
  [layout-lg~=lines-start] {
    -webkit-align-content: flex-start;
        -ms-flex-line-pack: start;
            align-content: flex-start; }
  [layout-lg~=lines-space-around] {
    -webkit-align-content: space-around;
        -ms-flex-line-pack: distribute;
            align-content: space-around; }
  [layout-lg~=lines-space-between] {
    -webkit-align-content: space-between;
        -ms-flex-line-pack: justify;
            align-content: space-between; }
  [layout-lg~=lines-stretch] {
    -webkit-align-content: stretch;
        -ms-flex-line-pack: stretch;
            align-content: stretch; }
  [layout-lg~=space-out]:not([layout-lg~=column]) > *:not(:last-child),
  [layout-lg~=column][layout-lg~=space-out-cross] > *:not(:last-child) {
    margin-right: 0.5rem; }
  [layout-lg~=space-out]:not([layout-lg~=column]) > *:not(:first-child),
  [layout-lg~=column][layout-lg~=space-out-cross] > *:not(:first-child) {
    margin-left: 0.5rem; }
  [layout-lg~=column][layout-lg~=space-out] > *:not(:last-child),
  [layout-lg~=space-out-cross]:not([layout-lg~=column]) > *:not(:last-child) {
    margin-bottom: 0.5rem; }
  [layout-lg~=column][layout-lg~=space-out] > *:not(:first-child),
  [layout-lg~=space-out-cross]:not([layout-lg~=column]) > *:not(:first-child) {
    margin-top: 0.5rem; } }

/**
 * Children.
 */
[flex~=none] {
  -webkit-box-flex: 0;
  -webkit-flex: none;
      -ms-flex: none;
          flex: none; }

[flex~=center] {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center; }

[flex~=end] {
  -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
          align-self: flex-end; }

[flex~=start] {
  -webkit-align-self: flex-start;
      -ms-flex-item-align: start;
          align-self: flex-start; }

[flex~=stretch] {
  -webkit-align-self: stretch;
      -ms-flex-item-align: stretch;
          align-self: stretch; }

[flex~='1'] {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

[flex~='2'] {
  -webkit-box-flex: 2;
  -webkit-flex: 2;
      -ms-flex: 2;
          flex: 2; }

[flex~='3'] {
  -webkit-box-flex: 3;
  -webkit-flex: 3;
      -ms-flex: 3;
          flex: 3; }

[flex~='4'] {
  -webkit-box-flex: 4;
  -webkit-flex: 4;
      -ms-flex: 4;
          flex: 4; }

[flex~='5'] {
  -webkit-box-flex: 5;
  -webkit-flex: 5;
      -ms-flex: 5;
          flex: 5; }

[flex~='6'] {
  -webkit-box-flex: 6;
  -webkit-flex: 6;
      -ms-flex: 6;
          flex: 6; }

[flex~='7'] {
  -webkit-box-flex: 7;
  -webkit-flex: 7;
      -ms-flex: 7;
          flex: 7; }

[flex~='8'] {
  -webkit-box-flex: 8;
  -webkit-flex: 8;
      -ms-flex: 8;
          flex: 8; }

[flex~='9'] {
  -webkit-box-flex: 9;
  -webkit-flex: 9;
      -ms-flex: 9;
          flex: 9; }

[flex~='10'] {
  -webkit-box-flex: 10;
  -webkit-flex: 10;
      -ms-flex: 10;
          flex: 10; }

[flex~='11'] {
  -webkit-box-flex: 11;
  -webkit-flex: 11;
      -ms-flex: 11;
          flex: 11; }

[flex~='12'] {
  -webkit-box-flex: 12;
  -webkit-flex: 12;
      -ms-flex: 12;
          flex: 12; }

[flex~=order--1] {
  -webkit-box-ordinal-group: 0;
  -webkit-order: -1;
      -ms-flex-order: -1;
          order: -1; }

[flex~=order-0] {
  -webkit-box-ordinal-group: 1;
  -webkit-order: 0;
      -ms-flex-order: 0;
          order: 0; }

[flex~=order-1] {
  -webkit-box-ordinal-group: 2;
  -webkit-order: 1;
      -ms-flex-order: 1;
          order: 1; }

[flex~=order-2] {
  -webkit-box-ordinal-group: 3;
  -webkit-order: 2;
      -ms-flex-order: 2;
          order: 2; }

[flex~=order-3] {
  -webkit-box-ordinal-group: 4;
  -webkit-order: 3;
      -ms-flex-order: 3;
          order: 3; }

[flex~=order-4] {
  -webkit-box-ordinal-group: 5;
  -webkit-order: 4;
      -ms-flex-order: 4;
          order: 4; }

[flex~=order-5] {
  -webkit-box-ordinal-group: 6;
  -webkit-order: 5;
      -ms-flex-order: 5;
          order: 5; }

[flex~=order-6] {
  -webkit-box-ordinal-group: 7;
  -webkit-order: 6;
      -ms-flex-order: 6;
          order: 6; }

[flex~=order-7] {
  -webkit-box-ordinal-group: 8;
  -webkit-order: 7;
      -ms-flex-order: 7;
          order: 7; }

[flex~=order-8] {
  -webkit-box-ordinal-group: 9;
  -webkit-order: 8;
      -ms-flex-order: 8;
          order: 8; }

[flex~=order-9] {
  -webkit-box-ordinal-group: 10;
  -webkit-order: 9;
      -ms-flex-order: 9;
          order: 9; }

[flex~=order-10] {
  -webkit-box-ordinal-group: 11;
  -webkit-order: 10;
      -ms-flex-order: 10;
          order: 10; }

[flex~=order-11] {
  -webkit-box-ordinal-group: 12;
  -webkit-order: 11;
      -ms-flex-order: 11;
          order: 11; }

[flex~=order-12] {
  -webkit-box-ordinal-group: 13;
  -webkit-order: 12;
      -ms-flex-order: 12;
          order: 12; }

@media (max-width: 599px) {
  [flex-sm~=none] {
    -webkit-box-flex: 0;
    -webkit-flex: none;
        -ms-flex: none;
            flex: none; }
  [flex-sm~=center] {
    -webkit-align-self: center;
        -ms-flex-item-align: center;
            align-self: center; }
  [flex-sm~=end] {
    -webkit-align-self: flex-end;
        -ms-flex-item-align: end;
            align-self: flex-end; }
  [flex-sm~=start] {
    -webkit-align-self: flex-start;
        -ms-flex-item-align: start;
            align-self: flex-start; }
  [flex-sm~=stretch] {
    -webkit-align-self: stretch;
        -ms-flex-item-align: stretch;
            align-self: stretch; }
  [flex-sm~='1'] {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  [flex-sm~='2'] {
    -webkit-box-flex: 2;
    -webkit-flex: 2;
        -ms-flex: 2;
            flex: 2; }
  [flex-sm~='3'] {
    -webkit-box-flex: 3;
    -webkit-flex: 3;
        -ms-flex: 3;
            flex: 3; }
  [flex-sm~='4'] {
    -webkit-box-flex: 4;
    -webkit-flex: 4;
        -ms-flex: 4;
            flex: 4; }
  [flex-sm~='5'] {
    -webkit-box-flex: 5;
    -webkit-flex: 5;
        -ms-flex: 5;
            flex: 5; }
  [flex-sm~='6'] {
    -webkit-box-flex: 6;
    -webkit-flex: 6;
        -ms-flex: 6;
            flex: 6; }
  [flex-sm~='7'] {
    -webkit-box-flex: 7;
    -webkit-flex: 7;
        -ms-flex: 7;
            flex: 7; }
  [flex-sm~='8'] {
    -webkit-box-flex: 8;
    -webkit-flex: 8;
        -ms-flex: 8;
            flex: 8; }
  [flex-sm~='9'] {
    -webkit-box-flex: 9;
    -webkit-flex: 9;
        -ms-flex: 9;
            flex: 9; }
  [flex-sm~='10'] {
    -webkit-box-flex: 10;
    -webkit-flex: 10;
        -ms-flex: 10;
            flex: 10; }
  [flex-sm~='11'] {
    -webkit-box-flex: 11;
    -webkit-flex: 11;
        -ms-flex: 11;
            flex: 11; }
  [flex-sm~='12'] {
    -webkit-box-flex: 12;
    -webkit-flex: 12;
        -ms-flex: 12;
            flex: 12; }
  [flex-sm~=order--1] {
    -webkit-box-ordinal-group: 0;
    -webkit-order: -1;
        -ms-flex-order: -1;
            order: -1; }
  [flex-sm~=order-0] {
    -webkit-box-ordinal-group: 1;
    -webkit-order: 0;
        -ms-flex-order: 0;
            order: 0; }
  [flex-sm~=order-1] {
    -webkit-box-ordinal-group: 2;
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1; }
  [flex-sm~=order-2] {
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2; }
  [flex-sm~=order-3] {
    -webkit-box-ordinal-group: 4;
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3; }
  [flex-sm~=order-4] {
    -webkit-box-ordinal-group: 5;
    -webkit-order: 4;
        -ms-flex-order: 4;
            order: 4; }
  [flex-sm~=order-5] {
    -webkit-box-ordinal-group: 6;
    -webkit-order: 5;
        -ms-flex-order: 5;
            order: 5; }
  [flex-sm~=order-6] {
    -webkit-box-ordinal-group: 7;
    -webkit-order: 6;
        -ms-flex-order: 6;
            order: 6; }
  [flex-sm~=order-7] {
    -webkit-box-ordinal-group: 8;
    -webkit-order: 7;
        -ms-flex-order: 7;
            order: 7; }
  [flex-sm~=order-8] {
    -webkit-box-ordinal-group: 9;
    -webkit-order: 8;
        -ms-flex-order: 8;
            order: 8; }
  [flex-sm~=order-9] {
    -webkit-box-ordinal-group: 10;
    -webkit-order: 9;
        -ms-flex-order: 9;
            order: 9; }
  [flex-sm~=order-10] {
    -webkit-box-ordinal-group: 11;
    -webkit-order: 10;
        -ms-flex-order: 10;
            order: 10; }
  [flex-sm~=order-11] {
    -webkit-box-ordinal-group: 12;
    -webkit-order: 11;
        -ms-flex-order: 11;
            order: 11; }
  [flex-sm~=order-12] {
    -webkit-box-ordinal-group: 13;
    -webkit-order: 12;
        -ms-flex-order: 12;
            order: 12; } }

@media (min-width: 600px) {
  [flex-md~=none] {
    -webkit-box-flex: 0;
    -webkit-flex: none;
        -ms-flex: none;
            flex: none; }
  [flex-md~=center] {
    -webkit-align-self: center;
        -ms-flex-item-align: center;
            align-self: center; }
  [flex-md~=end] {
    -webkit-align-self: flex-end;
        -ms-flex-item-align: end;
            align-self: flex-end; }
  [flex-md~=start] {
    -webkit-align-self: flex-start;
        -ms-flex-item-align: start;
            align-self: flex-start; }
  [flex-md~=stretch] {
    -webkit-align-self: stretch;
        -ms-flex-item-align: stretch;
            align-self: stretch; }
  [flex-md~='1'] {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  [flex-md~='2'] {
    -webkit-box-flex: 2;
    -webkit-flex: 2;
        -ms-flex: 2;
            flex: 2; }
  [flex-md~='3'] {
    -webkit-box-flex: 3;
    -webkit-flex: 3;
        -ms-flex: 3;
            flex: 3; }
  [flex-md~='4'] {
    -webkit-box-flex: 4;
    -webkit-flex: 4;
        -ms-flex: 4;
            flex: 4; }
  [flex-md~='5'] {
    -webkit-box-flex: 5;
    -webkit-flex: 5;
        -ms-flex: 5;
            flex: 5; }
  [flex-md~='6'] {
    -webkit-box-flex: 6;
    -webkit-flex: 6;
        -ms-flex: 6;
            flex: 6; }
  [flex-md~='7'] {
    -webkit-box-flex: 7;
    -webkit-flex: 7;
        -ms-flex: 7;
            flex: 7; }
  [flex-md~='8'] {
    -webkit-box-flex: 8;
    -webkit-flex: 8;
        -ms-flex: 8;
            flex: 8; }
  [flex-md~='9'] {
    -webkit-box-flex: 9;
    -webkit-flex: 9;
        -ms-flex: 9;
            flex: 9; }
  [flex-md~='10'] {
    -webkit-box-flex: 10;
    -webkit-flex: 10;
        -ms-flex: 10;
            flex: 10; }
  [flex-md~='11'] {
    -webkit-box-flex: 11;
    -webkit-flex: 11;
        -ms-flex: 11;
            flex: 11; }
  [flex-md~='12'] {
    -webkit-box-flex: 12;
    -webkit-flex: 12;
        -ms-flex: 12;
            flex: 12; }
  [flex-md~=order--1] {
    -webkit-box-ordinal-group: 0;
    -webkit-order: -1;
        -ms-flex-order: -1;
            order: -1; }
  [flex-md~=order-0] {
    -webkit-box-ordinal-group: 1;
    -webkit-order: 0;
        -ms-flex-order: 0;
            order: 0; }
  [flex-md~=order-1] {
    -webkit-box-ordinal-group: 2;
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1; }
  [flex-md~=order-2] {
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2; }
  [flex-md~=order-3] {
    -webkit-box-ordinal-group: 4;
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3; }
  [flex-md~=order-4] {
    -webkit-box-ordinal-group: 5;
    -webkit-order: 4;
        -ms-flex-order: 4;
            order: 4; }
  [flex-md~=order-5] {
    -webkit-box-ordinal-group: 6;
    -webkit-order: 5;
        -ms-flex-order: 5;
            order: 5; }
  [flex-md~=order-6] {
    -webkit-box-ordinal-group: 7;
    -webkit-order: 6;
        -ms-flex-order: 6;
            order: 6; }
  [flex-md~=order-7] {
    -webkit-box-ordinal-group: 8;
    -webkit-order: 7;
        -ms-flex-order: 7;
            order: 7; }
  [flex-md~=order-8] {
    -webkit-box-ordinal-group: 9;
    -webkit-order: 8;
        -ms-flex-order: 8;
            order: 8; }
  [flex-md~=order-9] {
    -webkit-box-ordinal-group: 10;
    -webkit-order: 9;
        -ms-flex-order: 9;
            order: 9; }
  [flex-md~=order-10] {
    -webkit-box-ordinal-group: 11;
    -webkit-order: 10;
        -ms-flex-order: 10;
            order: 10; }
  [flex-md~=order-11] {
    -webkit-box-ordinal-group: 12;
    -webkit-order: 11;
        -ms-flex-order: 11;
            order: 11; }
  [flex-md~=order-12] {
    -webkit-box-ordinal-group: 13;
    -webkit-order: 12;
        -ms-flex-order: 12;
            order: 12; } }

@media (min-width: 960px) {
  [flex-lg~=none] {
    -webkit-box-flex: 0;
    -webkit-flex: none;
        -ms-flex: none;
            flex: none; }
  [flex-lg~=center] {
    -webkit-align-self: center;
        -ms-flex-item-align: center;
            align-self: center; }
  [flex-lg~=end] {
    -webkit-align-self: flex-end;
        -ms-flex-item-align: end;
            align-self: flex-end; }
  [flex-lg~=start] {
    -webkit-align-self: flex-start;
        -ms-flex-item-align: start;
            align-self: flex-start; }
  [flex-lg~=stretch] {
    -webkit-align-self: stretch;
        -ms-flex-item-align: stretch;
            align-self: stretch; }
  [flex-lg~='1'] {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  [flex-lg~='2'] {
    -webkit-box-flex: 2;
    -webkit-flex: 2;
        -ms-flex: 2;
            flex: 2; }
  [flex-lg~='3'] {
    -webkit-box-flex: 3;
    -webkit-flex: 3;
        -ms-flex: 3;
            flex: 3; }
  [flex-lg~='4'] {
    -webkit-box-flex: 4;
    -webkit-flex: 4;
        -ms-flex: 4;
            flex: 4; }
  [flex-lg~='5'] {
    -webkit-box-flex: 5;
    -webkit-flex: 5;
        -ms-flex: 5;
            flex: 5; }
  [flex-lg~='6'] {
    -webkit-box-flex: 6;
    -webkit-flex: 6;
        -ms-flex: 6;
            flex: 6; }
  [flex-lg~='7'] {
    -webkit-box-flex: 7;
    -webkit-flex: 7;
        -ms-flex: 7;
            flex: 7; }
  [flex-lg~='8'] {
    -webkit-box-flex: 8;
    -webkit-flex: 8;
        -ms-flex: 8;
            flex: 8; }
  [flex-lg~='9'] {
    -webkit-box-flex: 9;
    -webkit-flex: 9;
        -ms-flex: 9;
            flex: 9; }
  [flex-lg~='10'] {
    -webkit-box-flex: 10;
    -webkit-flex: 10;
        -ms-flex: 10;
            flex: 10; }
  [flex-lg~='11'] {
    -webkit-box-flex: 11;
    -webkit-flex: 11;
        -ms-flex: 11;
            flex: 11; }
  [flex-lg~='12'] {
    -webkit-box-flex: 12;
    -webkit-flex: 12;
        -ms-flex: 12;
            flex: 12; }
  [flex-lg~=order--1] {
    -webkit-box-ordinal-group: 0;
    -webkit-order: -1;
        -ms-flex-order: -1;
            order: -1; }
  [flex-lg~=order-0] {
    -webkit-box-ordinal-group: 1;
    -webkit-order: 0;
        -ms-flex-order: 0;
            order: 0; }
  [flex-lg~=order-1] {
    -webkit-box-ordinal-group: 2;
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1; }
  [flex-lg~=order-2] {
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2; }
  [flex-lg~=order-3] {
    -webkit-box-ordinal-group: 4;
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3; }
  [flex-lg~=order-4] {
    -webkit-box-ordinal-group: 5;
    -webkit-order: 4;
        -ms-flex-order: 4;
            order: 4; }
  [flex-lg~=order-5] {
    -webkit-box-ordinal-group: 6;
    -webkit-order: 5;
        -ms-flex-order: 5;
            order: 5; }
  [flex-lg~=order-6] {
    -webkit-box-ordinal-group: 7;
    -webkit-order: 6;
        -ms-flex-order: 6;
            order: 6; }
  [flex-lg~=order-7] {
    -webkit-box-ordinal-group: 8;
    -webkit-order: 7;
        -ms-flex-order: 7;
            order: 7; }
  [flex-lg~=order-8] {
    -webkit-box-ordinal-group: 9;
    -webkit-order: 8;
        -ms-flex-order: 8;
            order: 8; }
  [flex-lg~=order-9] {
    -webkit-box-ordinal-group: 10;
    -webkit-order: 9;
        -ms-flex-order: 9;
            order: 9; }
  [flex-lg~=order-10] {
    -webkit-box-ordinal-group: 11;
    -webkit-order: 10;
        -ms-flex-order: 10;
            order: 10; }
  [flex-lg~=order-11] {
    -webkit-box-ordinal-group: 12;
    -webkit-order: 11;
        -ms-flex-order: 11;
            order: 11; }
  [flex-lg~=order-12] {
    -webkit-box-ordinal-group: 13;
    -webkit-order: 12;
        -ms-flex-order: 12;
            order: 12; } }

/********************************** General **********************************/
/**
 * Credit:
 * https://github.com/angular/material/blob/v0.10.0/src/core/style/variables.scss
 */
/******************************** colors.scss ********************************/
/**
 * Theme colours.
 */
/**
 * Static colours.
 */
/******************************** layout.scss ********************************/
/******************************** mixins.scss ********************************/
/****************************** typography.scss ******************************/
/**
 * rem sizing for the <html> element. The common baseline is 12pt = 16px =
 * 1em. We need to declare rem in pixels or points in order to have consistent
 * font scaling between various native elements.
 */
/****************************** sf-navbar.scss *******************************/
/****************************** sf-footer.scss *******************************/
/******************************* sf-jumbo.scss *******************************/
/****************************** sf-tabset.scss *******************************/
/****************************** sf-tooltip.scss ******************************/
/**
 * Default global text styles.
 */
html {
  font-family: Helvetica Neue, Verdana, sans-serif;
  font-size: 12pt; }
  @media (max-width: 599px) {
    html {
      font-size: 9.6pt; } }
  @media (min-width: 600px) and (max-width: 959px) {
    html {
      font-size: 10.8pt; } }

h1, h2, h3, h4, h5, h6 {
  font-weight: normal; }

form, input, textarea, button {
  font-family: inherit;
  font-weight: inherit;
  font-size: inherit;
  text-decoration: inherit; }

tt, code, kbd, pre, samp {
  font-family: Menlo, Andale Mono, Monaco, Consolas, monospace;
  font-size: 0.875em; }
  tt tt, tt code, tt kbd, tt pre, tt samp, code tt, code code, code kbd, code pre, code samp, kbd tt, kbd code, kbd kbd, kbd pre, kbd samp, pre tt, pre code, pre kbd, pre pre, pre samp, samp tt, samp code, samp kbd, samp pre, samp samp {
    font-size: 1em; }

/**
 * Using ideas from:
 * https://material.angularjs.org/latest/#/Theming/01_introduction
 *
 * A site chooses three colours for its palette, representing intentions:
 *   primary
 *   accent
 *   warn
 *
 * Each colour is defined as a map with a string name and three hues:
 *   name          <string>
 *   default
 *   active        :hover, :active, :focus
 *   selected      .active
 *
 * Given a colour with the name C, we expose two global attributes:
 *   [theme=C]        {background-color} and {color}
 *   [theme=text-C]   just {color}
 *
 * We also create an interactive version of each colour theme, available for
 * certain selectors. The interactive version has slightly different hues for
 * the 'active' and 'selected' states.
 */
[theme=text-primary] {
  color: #272759; }

[theme=primary] {
  background-color: #4646a0;
  color: #f8f8fc; }

[theme=text-accent] {
  color: #6b7609; }

[theme=accent] {
  background-color: #dbef2f;
  color: #090901; }

[theme=text-warn] {
  color: #6c1313; }

[theme=warn] {
  background-color: #d82727;
  color: #fdf6f6; }

.interactive:not([disabled]):hover, .interactive:not([disabled]):focus, .interactive:not([disabled]):active, a[href]:not([disabled]):hover, a[href]:not([disabled]):focus, a[href]:not([disabled]):active, button:not([disabled]):hover, button:not([disabled]):focus, button:not([disabled]):active, input:not([disabled]):hover, input:not([disabled]):focus, input:not([disabled]):active, textarea:not([disabled]):hover, textarea:not([disabled]):focus, textarea:not([disabled]):active, [contenteditable]:not([disabled]):hover, [contenteditable]:not([disabled]):focus, [contenteditable]:not([disabled]):active, input[id] + label[for]:not([disabled]):hover, input[id] + label[for]:not([disabled]):focus, input[id] + label[for]:not([disabled]):active {
  background-color: rgba(5, 5, 5, 0.05); }

.interactive:not([disabled]).active, a[href]:not([disabled]).active, button:not([disabled]).active, input:not([disabled]).active, textarea:not([disabled]).active, [contenteditable]:not([disabled]).active, input[id] + label[for]:not([disabled]).active {
  background-color: rgba(5, 5, 5, 0.1); }

.interactive:not([disabled])[theme=text-primary]:hover, .interactive:not([disabled])[theme=text-primary]:focus, .interactive:not([disabled])[theme=text-primary]:active, a[href]:not([disabled])[theme=text-primary]:hover, a[href]:not([disabled])[theme=text-primary]:focus, a[href]:not([disabled])[theme=text-primary]:active, button:not([disabled])[theme=text-primary]:hover, button:not([disabled])[theme=text-primary]:focus, button:not([disabled])[theme=text-primary]:active, input:not([disabled])[theme=text-primary]:hover, input:not([disabled])[theme=text-primary]:focus, input:not([disabled])[theme=text-primary]:active, textarea:not([disabled])[theme=text-primary]:hover, textarea:not([disabled])[theme=text-primary]:focus, textarea:not([disabled])[theme=text-primary]:active, [contenteditable]:not([disabled])[theme=text-primary]:hover, [contenteditable]:not([disabled])[theme=text-primary]:focus, [contenteditable]:not([disabled])[theme=text-primary]:active, input[id] + label[for]:not([disabled])[theme=text-primary]:hover, input[id] + label[for]:not([disabled])[theme=text-primary]:focus, input[id] + label[for]:not([disabled])[theme=text-primary]:active {
  color: #272759; }

.interactive:not([disabled])[theme=text-primary].active, a[href]:not([disabled])[theme=text-primary].active, button:not([disabled])[theme=text-primary].active, input:not([disabled])[theme=text-primary].active, textarea:not([disabled])[theme=text-primary].active, [contenteditable]:not([disabled])[theme=text-primary].active, input[id] + label[for]:not([disabled])[theme=text-primary].active {
  color: #272759; }

.interactive:not([disabled])[theme=primary]:hover, .interactive:not([disabled])[theme=primary]:focus, .interactive:not([disabled])[theme=primary]:active, a[href]:not([disabled])[theme=primary]:hover, a[href]:not([disabled])[theme=primary]:focus, a[href]:not([disabled])[theme=primary]:active, button:not([disabled])[theme=primary]:hover, button:not([disabled])[theme=primary]:focus, button:not([disabled])[theme=primary]:active, input:not([disabled])[theme=primary]:hover, input:not([disabled])[theme=primary]:focus, input:not([disabled])[theme=primary]:active, textarea:not([disabled])[theme=primary]:hover, textarea:not([disabled])[theme=primary]:focus, textarea:not([disabled])[theme=primary]:active, [contenteditable]:not([disabled])[theme=primary]:hover, [contenteditable]:not([disabled])[theme=primary]:focus, [contenteditable]:not([disabled])[theme=primary]:active, input[id] + label[for]:not([disabled])[theme=primary]:hover, input[id] + label[for]:not([disabled])[theme=primary]:focus, input[id] + label[for]:not([disabled])[theme=primary]:active {
  background-color: #5959b6;
  color: #f8f8fc; }

.interactive:not([disabled])[theme=primary].active, a[href]:not([disabled])[theme=primary].active, button:not([disabled])[theme=primary].active, input:not([disabled])[theme=primary].active, textarea:not([disabled])[theme=primary].active, [contenteditable]:not([disabled])[theme=primary].active, input[id] + label[for]:not([disabled])[theme=primary].active {
  background-color: #6e6ec0;
  color: #f8f8fc; }

.interactive:not([disabled])[theme=text-accent]:hover, .interactive:not([disabled])[theme=text-accent]:focus, .interactive:not([disabled])[theme=text-accent]:active, a[href]:not([disabled])[theme=text-accent]:hover, a[href]:not([disabled])[theme=text-accent]:focus, a[href]:not([disabled])[theme=text-accent]:active, button:not([disabled])[theme=text-accent]:hover, button:not([disabled])[theme=text-accent]:focus, button:not([disabled])[theme=text-accent]:active, input:not([disabled])[theme=text-accent]:hover, input:not([disabled])[theme=text-accent]:focus, input:not([disabled])[theme=text-accent]:active, textarea:not([disabled])[theme=text-accent]:hover, textarea:not([disabled])[theme=text-accent]:focus, textarea:not([disabled])[theme=text-accent]:active, [contenteditable]:not([disabled])[theme=text-accent]:hover, [contenteditable]:not([disabled])[theme=text-accent]:focus, [contenteditable]:not([disabled])[theme=text-accent]:active, input[id] + label[for]:not([disabled])[theme=text-accent]:hover, input[id] + label[for]:not([disabled])[theme=text-accent]:focus, input[id] + label[for]:not([disabled])[theme=text-accent]:active {
  color: #6b7609; }

.interactive:not([disabled])[theme=text-accent].active, a[href]:not([disabled])[theme=text-accent].active, button:not([disabled])[theme=text-accent].active, input:not([disabled])[theme=text-accent].active, textarea:not([disabled])[theme=text-accent].active, [contenteditable]:not([disabled])[theme=text-accent].active, input[id] + label[for]:not([disabled])[theme=text-accent].active {
  color: #6b7609; }

.interactive:not([disabled])[theme=accent]:hover, .interactive:not([disabled])[theme=accent]:focus, .interactive:not([disabled])[theme=accent]:active, a[href]:not([disabled])[theme=accent]:hover, a[href]:not([disabled])[theme=accent]:focus, a[href]:not([disabled])[theme=accent]:active, button:not([disabled])[theme=accent]:hover, button:not([disabled])[theme=accent]:focus, button:not([disabled])[theme=accent]:active, input:not([disabled])[theme=accent]:hover, input:not([disabled])[theme=accent]:focus, input:not([disabled])[theme=accent]:active, textarea:not([disabled])[theme=accent]:hover, textarea:not([disabled])[theme=accent]:focus, textarea:not([disabled])[theme=accent]:active, [contenteditable]:not([disabled])[theme=accent]:hover, [contenteditable]:not([disabled])[theme=accent]:focus, [contenteditable]:not([disabled])[theme=accent]:active, input[id] + label[for]:not([disabled])[theme=accent]:hover, input[id] + label[for]:not([disabled])[theme=accent]:focus, input[id] + label[for]:not([disabled])[theme=accent]:active {
  background-color: #d7ed17;
  color: #090901; }

.interactive:not([disabled])[theme=accent].active, a[href]:not([disabled])[theme=accent].active, button:not([disabled])[theme=accent].active, input:not([disabled])[theme=accent].active, textarea:not([disabled])[theme=accent].active, [contenteditable]:not([disabled])[theme=accent].active, input[id] + label[for]:not([disabled])[theme=accent].active {
  background-color: #c5da11;
  color: #090901; }

.interactive:not([disabled])[theme=text-warn]:hover, .interactive:not([disabled])[theme=text-warn]:focus, .interactive:not([disabled])[theme=text-warn]:active, a[href]:not([disabled])[theme=text-warn]:hover, a[href]:not([disabled])[theme=text-warn]:focus, a[href]:not([disabled])[theme=text-warn]:active, button:not([disabled])[theme=text-warn]:hover, button:not([disabled])[theme=text-warn]:focus, button:not([disabled])[theme=text-warn]:active, input:not([disabled])[theme=text-warn]:hover, input:not([disabled])[theme=text-warn]:focus, input:not([disabled])[theme=text-warn]:active, textarea:not([disabled])[theme=text-warn]:hover, textarea:not([disabled])[theme=text-warn]:focus, textarea:not([disabled])[theme=text-warn]:active, [contenteditable]:not([disabled])[theme=text-warn]:hover, [contenteditable]:not([disabled])[theme=text-warn]:focus, [contenteditable]:not([disabled])[theme=text-warn]:active, input[id] + label[for]:not([disabled])[theme=text-warn]:hover, input[id] + label[for]:not([disabled])[theme=text-warn]:focus, input[id] + label[for]:not([disabled])[theme=text-warn]:active {
  color: #6c1313; }

.interactive:not([disabled])[theme=text-warn].active, a[href]:not([disabled])[theme=text-warn].active, button:not([disabled])[theme=text-warn].active, input:not([disabled])[theme=text-warn].active, textarea:not([disabled])[theme=text-warn].active, [contenteditable]:not([disabled])[theme=text-warn].active, input[id] + label[for]:not([disabled])[theme=text-warn].active {
  color: #661919; }

.interactive:not([disabled])[theme=warn]:hover, .interactive:not([disabled])[theme=warn]:focus, .interactive:not([disabled])[theme=warn]:active, a[href]:not([disabled])[theme=warn]:hover, a[href]:not([disabled])[theme=warn]:focus, a[href]:not([disabled])[theme=warn]:active, button:not([disabled])[theme=warn]:hover, button:not([disabled])[theme=warn]:focus, button:not([disabled])[theme=warn]:active, input:not([disabled])[theme=warn]:hover, input:not([disabled])[theme=warn]:focus, input:not([disabled])[theme=warn]:active, textarea:not([disabled])[theme=warn]:hover, textarea:not([disabled])[theme=warn]:focus, textarea:not([disabled])[theme=warn]:active, [contenteditable]:not([disabled])[theme=warn]:hover, [contenteditable]:not([disabled])[theme=warn]:focus, [contenteditable]:not([disabled])[theme=warn]:active, input[id] + label[for]:not([disabled])[theme=warn]:hover, input[id] + label[for]:not([disabled])[theme=warn]:focus, input[id] + label[for]:not([disabled])[theme=warn]:active {
  background-color: #c22323;
  color: #fdf6f6; }

.interactive:not([disabled])[theme=warn].active, a[href]:not([disabled])[theme=warn].active, button:not([disabled])[theme=warn].active, input:not([disabled])[theme=warn].active, textarea:not([disabled])[theme=warn].active, [contenteditable]:not([disabled])[theme=warn].active, input[id] + label[for]:not([disabled])[theme=warn].active {
  background-color: #b32c2c;
  color: #fdf7f7; }

.interactive[disabled], a[href][disabled], button[disabled], input[disabled], textarea[disabled], [contenteditable][disabled], input[id] + label[for][disabled] {
  cursor: not-allowed;
  opacity: 0.7; }

.interactive, a[href], button, input[id] + label[for] {
  cursor: pointer; }

html {
  background-color: #ededed;
  color: #050505; }

body {
  background-color: #fafafa; }

a {
  color: #4646a0; }

a[theme=text-primary], a[theme=primary], [theme=text-primary] a, [theme=primary] a {
  color: inherit; }

a[theme=text-accent], a[theme=accent], [theme=text-accent] a, [theme=accent] a {
  color: inherit; }

a[theme=text-warn], a[theme=warn], [theme=text-warn] a, [theme=warn] a {
  color: inherit; }

tt, code, kbd, pre, samp {
  background-color: rgba(0, 0, 0, 0.03); }

/********************************** Styles ***********************************/
/**
 * Global default styling that doesn't fall into other categories.
 */
[contenteditable]:focus {
  outline: 1px solid rgba(5, 5, 5, 0.1); }

[tabindex='-1']:focus {
  outline: none; }

/**
 * Default styling for monospace tags.
 */
tt, code, kbd, pre, samp {
  border-radius: 0.1rem; }

pre {
  white-space: pre-wrap; }

a, a:hover {
  text-decoration: none; }

img {
  max-width: 100%; }

ul, ol {
  list-style-position: inside; }

ul ul, ul ol, ol ul, ol ol {
  margin-left: 1rem; }

/********************************** Globals **********************************/
[hidden] {
  display: none; }

/**
 * Whitespace.
 */
.pad {
  padding: 1rem; }

.pad-v {
  padding-top: 1rem;
  padding-bottom: 1rem; }

.space-out > *:not(:last-child) {
  margin-bottom: 0.5rem; }

.space-out > *:not(:first-child) {
  margin-top: 0.5rem; }

.space-out-horizontal > *:not(:last-child) {
  margin-right: 0.5rem; }

.space-out-horizontal > *:not(:first-child) {
  margin-left: 0.5rem; }

/**
 * Typography.
 */
.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

/**
 * Usage:
 *
 *   <sf-article>...</sf-article>
 *   <article class="sf-article">...</article>
 */
sf-article,
.sf-article {
  /**
   * Layout.
   */
  display: block;
  padding: 1rem; }
  sf-article img,
  .sf-article img {
    box-shadow: 0 0 4px -1px rgba(5, 5, 5, 0.5); }
    sf-article img.left,
    sf-article img.right,
    .sf-article img.left, .sf-article img.right {
      height: 16em; }
    sf-article img.left,
    .sf-article img.left {
      float: left;
      margin-right: 1rem; }
    sf-article img.right,
    .sf-article img.right {
      float: right;
      margin-left: 1rem; }
    sf-article img.tiny,
    .sf-article img.tiny {
      height: 10em; }
    sf-article img.small,
    .sf-article img.small {
      height: 12em; }
    sf-article img.medium,
    .sf-article img.medium {
      height: 20em; }
  sf-article > *:not(:last-child),
  .sf-article > *:not(:last-child) {
    margin-bottom: 1rem; }
  sf-article > *:not(:first-child),
  .sf-article > *:not(:first-child) {
    margin-top: 1rem; }
  sf-article p a,
  sf-article ul a,
  .sf-article p a, .sf-article ul a {
    border-bottom: 1px dotted;
    border-color: inherit;
    background-color: rgba(5, 5, 5, 0.03);
    color: #4646a0; }
    sf-article p a:visited,
    sf-article ul a:visited,
    .sf-article p a:visited, .sf-article ul a:visited {
      color: #5959b6; }
  sf-article::after,
  .sf-article::after {
    content: '';
    display: table;
    clear: both; }

/**
 * <button>...</button>
 * <input type="button">
 * <sf-button>...</sf-button>
 * <div class="sf-button">...</div>
 */
sf-button,
.sf-button,
button, input[type=button] {
  /**
   * Layout.
   */
  display: inline-block;
  padding: 0.5rem;
  font-size: inherit;
  background-color: inherit;
  border: none;
  border-radius: 0.2rem;
  outline: none;
  box-shadow: 0 0.1rem 0.3rem -1px rgba(5, 5, 5, 0.5);
  -webkit-transition-property: all;
          transition-property: all;
  -webkit-transition-duration: 0.2s;
          transition-duration: 0.2s;
  -webkit-transition-timing-function: ease;
          transition-timing-function: ease; }
  sf-button:focus,
  .sf-button:focus,
  button:focus, input[type=button]:focus {
    outline: none; }
  sf-button:active,
  .sf-button:active,
  button:active, input[type=button]:active {
    box-shadow: 0 0 4px -1px rgba(5, 5, 5, 0.5); }
  sf-button.sf-flat,
  sf-button[disabled],
  .sf-button.sf-flat,
  .sf-button[disabled],
  button.sf-flat, button[disabled], input[type=button].sf-flat, input[type=button][disabled] {
    box-shadow: none; }

/**
 * <sf-collapse> is a vertically collapsing element with a toggle.
 *
 *
 * # Basic usage
 *
 * Must have the exact following layout:
 *
 *   <sf-collapse>
 *     <input id="..." type="checkbox">
 *     <label for="...">...</label>
 *     ...
 *   </sf-collapse>
 *
 * The <input> is hidden and serves as a state vector. The [id] and [for]
 * attributes must match. The <label> may have arbitrary content. The collapsing
 * part is everything following the label.
 *
 * Mark the <input> as [checked] to uncollapse the element by default:
 *
 *   <sf-collapse>
 *     <input checked id="..." type="checkbox">
 *     <label for="...">...</label>
 *     ...
 *   </sf-collapse>
 *
 *
 * # Options
 *
 * Has an option to enable an overlay that collapses the element when clicking
 * anywhere outside.
 *
 *   <sf-collapse sf-overlay>
 *     ...
 *   </sf-collapse>
 */
sf-collapse {
  /**
   * Layout.
   */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  /**
   * Base label styles.
   */
  /**
   * Active label styles.
   */
  /**
   * Base overlay styles.
   */
  /**
   * Active overlay styles.
   */
  /**
   * Styles for collapsable children.
   */ }
  sf-collapse > * {
    padding: 0.5rem; }
  sf-collapse > input[type=checkbox] {
    display: none; }
  sf-collapse > input[type=checkbox] + label {
    /**
     * Layout.
     */
    display: block;
    cursor: pointer; }
    sf-collapse > input[type=checkbox] + label::after {
      content: '▽';
      display: inline-block;
      vertical-align: middle;
      opacity: 0.5; }
    sf-collapse > input[type=checkbox] + label:not(:empty)::after {
      padding-left: 0.5em; }
  sf-collapse > input[type=checkbox]:checked + label {
    background-color: rgba(5, 5, 5, 0.1); }
    sf-collapse > input[type=checkbox]:checked + label::after {
      content: '▲'; }
    sf-collapse > input[type=checkbox]:checked + label[theme=text-primary] {
      color: #272759; }
    sf-collapse > input[type=checkbox]:checked + label[theme=primary] {
      background-color: #6e6ec0;
      color: #f8f8fc; }
    sf-collapse > input[type=checkbox]:checked + label[theme=text-accent] {
      color: #6b7609; }
    sf-collapse > input[type=checkbox]:checked + label[theme=accent] {
      background-color: #c5da11;
      color: #090901; }
    sf-collapse > input[type=checkbox]:checked + label[theme=text-warn] {
      color: #661919; }
    sf-collapse > input[type=checkbox]:checked + label[theme=warn] {
      background-color: #b32c2c;
      color: #fdf7f7; }
  sf-collapse[sf-overlay] > input[type=checkbox] + label::before {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 0; }
  sf-collapse[sf-overlay] > input[type=checkbox]:checked + label::before {
    content: ''; }
  sf-collapse > input[type=checkbox]:not(:checked) + label ~ * {
    padding: 0;
    max-height: 0;
    -webkit-transform: scaleY(0);
        -ms-transform: scaleY(0);
            transform: scaleY(0); }
  sf-collapse > input[type=checkbox]:checked + label ~ * {
    -webkit-transform: scaleY(1);
        -ms-transform: scaleY(1);
            transform: scaleY(1); }
  sf-article sf-collapse a {
    border: none; }
  sf-collapse > * {
    -webkit-transition-property: all;
            transition-property: all;
    -webkit-transition-duration: 0.2s;
            transition-duration: 0.2s;
    -webkit-transition-timing-function: ease;
            transition-timing-function: ease; }

/**
 *
 * # Modes
 *
 * <sf-dropdown> has two mutually exclusive modes: hover and toggled. The
 * toggled version is enabled by adding an <input type="checkbox"> before
 * the <label>.
 *
 *
 * ## Hover
 *
 * The hover version must have the exact following layout:
 *
 *   <sf-dropdown>
 *     <label>...</label>
 *     <sf-dropdown-list>
 *       ...
 *     </sf-dropdown-list>
 *   </sf-dropdown>
 *
 * It triggers when you hover over the label and stays while the label or
 * the <sf-dropdown-list> is hovered. The label needs to contain some text or
 * other content to be visible. The following <sf-dropdown-list> may contain
 * arbitrary elements.
 *
 *
 * ## Toggled
 *
 * The toggled version is enabled by adding an <input id="..." type="checkbox">
 * before the <label for="...">. It must have the exact following layout:
 *
 *   <sf-dropdown>
 *     <input id="..." type="checkbox">
 *     <label for="...">...</label>
 *     <sf-dropdown-list>
 *       ...
 *     </sf-dropdown-list>
 *   </sf-dropdown>
 *
 * The [id] and [for] values must match, otherwise toggling won't work.
 * This version is toggled on and off by clicking the label, and is toggled off
 * when clicking outside of the dropdown.
 *
 *
 * # Position
 *
 * The default position of the dropdown list is below the label. It can be
 * altered with an attribute.
 *
 *   <sf-dropdown sf-position="top">
 *   <sf-dropdown sf-position="right">
 *   <sf-dropdown sf-position="left">
 */
/**
 * ToDo.
 *
 * Use different xy shadow offsets based on [sf-position].
 */
sf-dropdown {
  /**
   * Layout.
   */
  display: inline-block;
  position: relative;
  /**
   * Base label styles.
   */
  /**
   * Base label styles for the toggled version.
   */
  /**
   * Active label styles for the toggled version.
   */
  /**
   * Base dropdown list styles.
   */
  /**
   * Position-dependent indicators.
   */
  /**
   * Active dropdown list styles.
   */
  /**
   * Dropdown list positioning.
   */ }
  sf-dropdown:hover {
    z-index: 1100; }
  sf-dropdown > input[type=checkbox] {
    display: none; }
  sf-dropdown:not([theme]) {
    background-color: #fafafa; }
  sf-dropdown > label {
    /**
     * Layout.
     */
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-align-self: stretch;
        -ms-flex-item-align: stretch;
            align-self: stretch;
    /**
     * Inner layout.
     */
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    /**
     * Cosmetic.
     */
    cursor: pointer; }
    sf-dropdown > label::after {
      content: '▽';
      display: inline-block;
      vertical-align: middle;
      opacity: 0.5;
      font-size: 50%; }
    sf-dropdown > label:not(:empty)::after {
      padding-left: 0.5em; }
  sf-dropdown > input[type=checkbox] + label {
    /**
     * Overlay for closing the toggled dropdown.
     */ }
    sf-dropdown > input[type=checkbox] + label::before {
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      opacity: 0;
      cursor: default;
      z-index: 1099; }
  sf-dropdown > input[type=checkbox]:checked + label {
    background-color: rgba(5, 5, 5, 0.1); }
    sf-dropdown > input[type=checkbox]:checked + label::before {
      content: ''; }
    sf-dropdown > input[type=checkbox]:checked + label::after {
      content: '▲'; }
    sf-dropdown > input[type=checkbox]:checked + label[theme=text-primary] {
      color: #272759; }
    sf-dropdown > input[type=checkbox]:checked + label[theme=primary] {
      background-color: #6e6ec0;
      color: #f8f8fc; }
    sf-dropdown > input[type=checkbox]:checked + label[theme=text-accent] {
      color: #6b7609; }
    sf-dropdown > input[type=checkbox]:checked + label[theme=accent] {
      background-color: #c5da11;
      color: #090901; }
    sf-dropdown > input[type=checkbox]:checked + label[theme=text-warn] {
      color: #661919; }
    sf-dropdown > input[type=checkbox]:checked + label[theme=warn] {
      background-color: #b32c2c;
      color: #fdf7f7; }
  sf-dropdown > sf-dropdown-list {
    /**
     * Layout.
     */
    position: absolute;
    z-index: 1100;
    opacity: 0;
    visibility: hidden;
    -webkit-transition-property: all;
            transition-property: all;
    -webkit-transition-duration: 0.2s;
            transition-duration: 0.2s;
    -webkit-transition-timing-function: ease;
            transition-timing-function: ease;
    /**
     * Inner layout.
     */
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column;
    /**
     * Cosmetic.
     */
    box-shadow: 0 0.2rem 1.5rem -0.2rem rgba(5, 5, 5, 0.5);
    background-color: inherit; }
    sf-dropdown > sf-dropdown-list > * {
      padding: 1rem; }
  sf-dropdown[sf-position=top] > label::after {
    content: '△'; }
  sf-dropdown[sf-position=top] > input[type=checkbox]:checked + label::after {
    content: '▼'; }
  sf-dropdown > label:first-child:hover + sf-dropdown-list,
  sf-dropdown > label:first-child + sf-dropdown-list:hover,
  sf-dropdown > input[type=checkbox]:checked + label + sf-dropdown-list {
    opacity: inherit;
    visibility: inherit; }
  sf-dropdown[sf-position=top] > sf-dropdown-list {
    bottom: 100%;
    left: 0; }
  sf-dropdown[sf-position=right] > sf-dropdown-list {
    top: 0;
    left: 100%; }
  sf-dropdown:not([sf-position]) > sf-dropdown-list, sf-dropdown[sf-position=bottom] > sf-dropdown-list {
    top: 100%;
    left: 0; }
  sf-dropdown[sf-position=left] > sf-dropdown-list {
    top: 0;
    right: 100%; }

/**
 * Responsive embed. Copied from:
 * https://github.com/twbs/bootstrap/blob/master/less/responsive-embed.less
 *
 * <sf-embed>
 *   <iframe src=...></iframe>
 * </sf-embed>
 */
sf-embed {
  display: block;
  position: relative;
  height: 0;
  padding: 0;
  overflow: hidden; }
  sf-embed, sf-embed.ratio-16by9 {
    padding-bottom: 56.25%; }
  sf-embed.ratio-4by3 {
    padding-bottom: 75%; }
  sf-embed .embed-responsive-item,
  sf-embed iframe,
  sf-embed embed,
  sf-embed object,
  sf-embed video {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    height: 100%;
    width: 100%;
    border: 0; }

/**
 * The site footer. When the page is short, it's automatically pushed to the
 * bottom of the viewport. When there's enough content on the page, the footer
 * is pushed further down and is spaced out from that content by a configurable
 * margin.
 *
 * The footer styling is defined with the expectation that it's the last
 * visible child of the document body. The document needs to look like this:
 *
 *   <body>
 *     <sf-navbar>...</sf-navbar>
 *
 *     ...
 *
 *     <sf-footer>
 *       <sf-footer-body>
 *         ...
 *       </sf-footer-body>
 *     </sf-footer>
 *   </body>
 *
 * The footer content must be inside <sf-footer-body>.
 *
 * The footer styling relies on the body being a flex container with
 * {flex-direction: column}, which is the global default defined in layout.scss.
 */
sf-footer {
  /**
   * Layout.
   */
  display: block;
  width: 100%;
  margin-top: auto;
  /**
   * Footer body styling.
   */ }
  sf-footer sf-footer-body {
    /**
     * Layout.
     */
    width: 100%;
    min-height: 3.5rem;
    margin-top: 4rem;
    /**
     * Inner layout.
     */
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between;
    padding: 1rem;
    background-color: inherit; }

/**
 * Grid placeholder.
 *
 *   <sf-grid>
 *     ...
 *   </sf-grid>
 */
/**
 * ToDo.
 *
 * Review if we need a better system. Pilfer ideas from angular-material's grid.
 */
sf-grid {
  /**
   * Inner layout.
   */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  /**
   * Immediate children.
   */ }
  sf-grid > * {
    -webkit-box-flex: 0;
    -webkit-flex-grow: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    -webkit-flex-shrink: 0;
        -ms-flex-negative: 0;
            flex-shrink: 0; }
    @media (max-width: 599px) {
      sf-grid > * {
        -webkit-flex-basis: 50%;
            -ms-flex-preferred-size: 50%;
                flex-basis: 50%; } }
    @media (min-width: 600px) and (max-width: 959px) {
      sf-grid > * {
        -webkit-flex-basis: 25%;
            -ms-flex-preferred-size: 25%;
                flex-basis: 25%; } }
    @media (min-width: 960px) {
      sf-grid > * {
        -webkit-flex-basis: 25%;
            -ms-flex-preferred-size: 25%;
                flex-basis: 25%; } }

/**
 * sf-icon is a container for icons with background images, such as data-encoded
 * SVG. To use it, add a background-image property through CSS, an inline style
 * attribute, or an inner `<svg>` tag.
 *
 * Example usage.
 *
 * In your stylesheet:
 *
 *   sf-icon.skype {
 *     background-image: url(path-to-skype-icon.svg);
 *   }
 *
 * In your HTML:
 *
 *   <sf-icon class="skype"></sf-icon>
 *
 * sf-icon is sized as 1em by default, which means it'll be the same size as
 * surrounding text. To scale it separately, use a bigger font-size:
 *
 *   <sf-icon style="font-size: 1.2em"></sf-icon>
 */
sf-icon {
  /**
   * Layout.
   */
  display: inline-block;
  width: 1em;
  height: 1em;
  /**
   * Background styling.
   */
  background-size: contain;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  /**
   * Version that loses its hue and lightens or darkens until hovered or
   * otherwise activated.
   */
  /**
   * Version that loses its hue and lightens until hovered or otherwise
   * activated.
   */
  /**
   * Version that pops on activation.
   */
  -webkit-transition-property: all;
          transition-property: all;
  -webkit-transition-duration: 0.2s;
          transition-duration: 0.2s;
  -webkit-transition-timing-function: ease;
          transition-timing-function: ease; }
  sf-icon.inline {
    vertical-align: middle;
    position: relative;
    top: -0.08em; }
    sf-icon.inline:not(:first-child) {
      margin-left: 0.2rem; }
    sf-icon.inline:not(:last-child) {
      margin-right: 0.2rem; }
  sf-icon > svg {
    display: inline-block;
    width: 1em;
    height: 1em; }
  sf-icon.dark:not(:hover):not(:focus):not(:active):not(.active) {
    -webkit-filter: grayscale(1) brightness(0.2);
            filter: grayscale(1) brightness(0.2); }
  sf-icon.light:not(:hover):not(:focus):not(:active):not(.active) {
    -webkit-filter: grayscale(1) brightness(2);
            filter: grayscale(1) brightness(2); }
  sf-icon.pop:hover, sf-icon.pop:focus, sf-icon.pop:active, sf-icon.pop.active {
    -webkit-transform: scale(1.5);
        -ms-transform: scale(1.5);
            transform: scale(1.5); }

/**
 * Text input styles.
 *
 *   <input class="sf-input" type="text">
 *   <input type="text">
 *   <textarea class="sf-input"></textarea>
 *   <textarea></textarea>
 */
.sf-input,
input:not([type]), input[type=email], input[type=password], input[type=search],
input[type=text], input[type=url], input[type=number], textarea {
  /**
   * Layout.
   */
  display: inline-block;
  padding: 0.5rem;
  border: none;
  -webkit-transition-property: all;
          transition-property: all;
  -webkit-transition-duration: 0.2s;
          transition-duration: 0.2s;
  -webkit-transition-timing-function: ease;
          transition-timing-function: ease; }
  .sf-input,
  .sf-input:focus,
  .sf-input:active,
  input:not([type]), input:not([type]):focus, input:not([type]):active, input[type=email], input[type=email]:focus, input[type=email]:active, input[type=password], input[type=password]:focus, input[type=password]:active, input[type=search],
  input[type=search]:focus,
  input[type=search]:active,
  input[type=text], input[type=text]:focus, input[type=text]:active, input[type=url], input[type=url]:focus, input[type=url]:active, input[type=number], input[type=number]:focus, input[type=number]:active, textarea, textarea:focus, textarea:active {
    outline-offset: 0;
    outline: 1px solid rgba(5, 5, 5, 0.1); }
  .sf-input:active,
  .sf-input:focus,
  input:not([type]):active, input:not([type]):focus, input[type=email]:active, input[type=email]:focus, input[type=password]:active, input[type=password]:focus, input[type=search]:active,
  input[type=search]:focus,
  input[type=text]:active, input[type=text]:focus, input[type=url]:active, input[type=url]:focus, input[type=number]:active, input[type=number]:focus, textarea:active, textarea:focus {
    outline: 1px solid rgba(5, 5, 5, 0.2); }
  .sf-input[theme=text-primary]:active,
  .sf-input[theme=text-primary]:focus,
  input:not([type])[theme=text-primary]:active, input:not([type])[theme=text-primary]:focus, input[type=email][theme=text-primary]:active, input[type=email][theme=text-primary]:focus, input[type=password][theme=text-primary]:active, input[type=password][theme=text-primary]:focus, input[type=search][theme=text-primary]:active,
  input[type=search][theme=text-primary]:focus,
  input[type=text][theme=text-primary]:active, input[type=text][theme=text-primary]:focus, input[type=url][theme=text-primary]:active, input[type=url][theme=text-primary]:focus, input[type=number][theme=text-primary]:active, input[type=number][theme=text-primary]:focus, textarea[theme=text-primary]:active, textarea[theme=text-primary]:focus {
    outline: 1px solid #4646a0; }
  .sf-input[theme=primary]:active,
  .sf-input[theme=primary]:focus,
  input:not([type])[theme=primary]:active, input:not([type])[theme=primary]:focus, input[type=email][theme=primary]:active, input[type=email][theme=primary]:focus, input[type=password][theme=primary]:active, input[type=password][theme=primary]:focus, input[type=search][theme=primary]:active,
  input[type=search][theme=primary]:focus,
  input[type=text][theme=primary]:active, input[type=text][theme=primary]:focus, input[type=url][theme=primary]:active, input[type=url][theme=primary]:focus, input[type=number][theme=primary]:active, input[type=number][theme=primary]:focus, textarea[theme=primary]:active, textarea[theme=primary]:focus {
    outline: 1px solid #4646a0; }
  .sf-input[theme=text-accent]:active,
  .sf-input[theme=text-accent]:focus,
  input:not([type])[theme=text-accent]:active, input:not([type])[theme=text-accent]:focus, input[type=email][theme=text-accent]:active, input[type=email][theme=text-accent]:focus, input[type=password][theme=text-accent]:active, input[type=password][theme=text-accent]:focus, input[type=search][theme=text-accent]:active,
  input[type=search][theme=text-accent]:focus,
  input[type=text][theme=text-accent]:active, input[type=text][theme=text-accent]:focus, input[type=url][theme=text-accent]:active, input[type=url][theme=text-accent]:focus, input[type=number][theme=text-accent]:active, input[type=number][theme=text-accent]:focus, textarea[theme=text-accent]:active, textarea[theme=text-accent]:focus {
    outline: 1px solid #dbef2f; }
  .sf-input[theme=accent]:active,
  .sf-input[theme=accent]:focus,
  input:not([type])[theme=accent]:active, input:not([type])[theme=accent]:focus, input[type=email][theme=accent]:active, input[type=email][theme=accent]:focus, input[type=password][theme=accent]:active, input[type=password][theme=accent]:focus, input[type=search][theme=accent]:active,
  input[type=search][theme=accent]:focus,
  input[type=text][theme=accent]:active, input[type=text][theme=accent]:focus, input[type=url][theme=accent]:active, input[type=url][theme=accent]:focus, input[type=number][theme=accent]:active, input[type=number][theme=accent]:focus, textarea[theme=accent]:active, textarea[theme=accent]:focus {
    outline: 1px solid #dbef2f; }
  .sf-input[theme=text-warn]:active,
  .sf-input[theme=text-warn]:focus,
  input:not([type])[theme=text-warn]:active, input:not([type])[theme=text-warn]:focus, input[type=email][theme=text-warn]:active, input[type=email][theme=text-warn]:focus, input[type=password][theme=text-warn]:active, input[type=password][theme=text-warn]:focus, input[type=search][theme=text-warn]:active,
  input[type=search][theme=text-warn]:focus,
  input[type=text][theme=text-warn]:active, input[type=text][theme=text-warn]:focus, input[type=url][theme=text-warn]:active, input[type=url][theme=text-warn]:focus, input[type=number][theme=text-warn]:active, input[type=number][theme=text-warn]:focus, textarea[theme=text-warn]:active, textarea[theme=text-warn]:focus {
    outline: 1px solid #d82727; }
  .sf-input[theme=warn]:active,
  .sf-input[theme=warn]:focus,
  input:not([type])[theme=warn]:active, input:not([type])[theme=warn]:focus, input[type=email][theme=warn]:active, input[type=email][theme=warn]:focus, input[type=password][theme=warn]:active, input[type=password][theme=warn]:focus, input[type=search][theme=warn]:active,
  input[type=search][theme=warn]:focus,
  input[type=text][theme=warn]:active, input[type=text][theme=warn]:focus, input[type=url][theme=warn]:active, input[type=url][theme=warn]:focus, input[type=number][theme=warn]:active, input[type=number][theme=warn]:focus, textarea[theme=warn]:active, textarea[theme=warn]:focus {
    outline: 1px solid #d82727; }
  .sf-input::-webkit-input-placeholder,
  input:not([type])::-webkit-input-placeholder, input[type=email]::-webkit-input-placeholder, input[type=password]::-webkit-input-placeholder, input[type=search]::-webkit-input-placeholder,
  input[type=text]::-webkit-input-placeholder, input[type=url]::-webkit-input-placeholder, input[type=number]::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
    color: rgba(5, 5, 5, 0.5); }
  .sf-input::-moz-placeholder,
  input:not([type])::-moz-placeholder, input[type=email]::-moz-placeholder, input[type=password]::-moz-placeholder, input[type=search]::-moz-placeholder,
  input[type=text]::-moz-placeholder, input[type=url]::-moz-placeholder, input[type=number]::-moz-placeholder, textarea::-moz-placeholder {
    color: rgba(5, 5, 5, 0.5); }
  .sf-input:-ms-input-placeholder,
  input:not([type]):-ms-input-placeholder, input[type=email]:-ms-input-placeholder, input[type=password]:-ms-input-placeholder, input[type=search]:-ms-input-placeholder,
  input[type=text]:-ms-input-placeholder, input[type=url]:-ms-input-placeholder, input[type=number]:-ms-input-placeholder, textarea:-ms-input-placeholder {
    color: rgba(5, 5, 5, 0.5); }
  .sf-input::placeholder,
  input:not([type])::placeholder, input[type=email]::placeholder, input[type=password]::placeholder, input[type=search]::placeholder,
  input[type=text]::placeholder, input[type=url]::placeholder, input[type=number]::placeholder, textarea::placeholder {
    color: rgba(5, 5, 5, 0.5); }
  .sf-input:not(:hover):not(:focus):not(:active):not(.active):not([theme]),
  .sf-input:not(:hover):not(:focus):not(:active):not(.active)[theme^=text],
  .sf-input[disabled]:not([theme]),
  .sf-input[disabled][theme^=text],
  input:not([type]):not(:hover):not(:focus):not(:active):not(.active):not([theme]), input:not([type]):not(:hover):not(:focus):not(:active):not(.active)[theme^=text], input:not([type])[disabled]:not([theme]), input:not([type])[disabled][theme^=text], input[type=email]:not(:hover):not(:focus):not(:active):not(.active):not([theme]), input[type=email]:not(:hover):not(:focus):not(:active):not(.active)[theme^=text], input[type=email][disabled]:not([theme]), input[type=email][disabled][theme^=text], input[type=password]:not(:hover):not(:focus):not(:active):not(.active):not([theme]), input[type=password]:not(:hover):not(:focus):not(:active):not(.active)[theme^=text], input[type=password][disabled]:not([theme]), input[type=password][disabled][theme^=text], input[type=search]:not(:hover):not(:focus):not(:active):not(.active):not([theme]),
  input[type=search]:not(:hover):not(:focus):not(:active):not(.active)[theme^=text],
  input[type=search][disabled]:not([theme]),
  input[type=search][disabled][theme^=text],
  input[type=text]:not(:hover):not(:focus):not(:active):not(.active):not([theme]), input[type=text]:not(:hover):not(:focus):not(:active):not(.active)[theme^=text], input[type=text][disabled]:not([theme]), input[type=text][disabled][theme^=text], input[type=url]:not(:hover):not(:focus):not(:active):not(.active):not([theme]), input[type=url]:not(:hover):not(:focus):not(:active):not(.active)[theme^=text], input[type=url][disabled]:not([theme]), input[type=url][disabled][theme^=text], input[type=number]:not(:hover):not(:focus):not(:active):not(.active):not([theme]), input[type=number]:not(:hover):not(:focus):not(:active):not(.active)[theme^=text], input[type=number][disabled]:not([theme]), input[type=number][disabled][theme^=text], textarea:not(:hover):not(:focus):not(:active):not(.active):not([theme]), textarea:not(:hover):not(:focus):not(:active):not(.active)[theme^=text], textarea[disabled]:not([theme]), textarea[disabled][theme^=text] {
    background-color: inherit; }
  .sf-input[theme=text-primary]::-webkit-input-placeholder,
  input:not([type])[theme=text-primary]::-webkit-input-placeholder, input[type=email][theme=text-primary]::-webkit-input-placeholder, input[type=password][theme=text-primary]::-webkit-input-placeholder, input[type=search][theme=text-primary]::-webkit-input-placeholder,
  input[type=text][theme=text-primary]::-webkit-input-placeholder, input[type=url][theme=text-primary]::-webkit-input-placeholder, input[type=number][theme=text-primary]::-webkit-input-placeholder, textarea[theme=text-primary]::-webkit-input-placeholder {
    color: rgba(70, 70, 160, 0.5); }
  .sf-input[theme=text-primary]::-moz-placeholder,
  input:not([type])[theme=text-primary]::-moz-placeholder, input[type=email][theme=text-primary]::-moz-placeholder, input[type=password][theme=text-primary]::-moz-placeholder, input[type=search][theme=text-primary]::-moz-placeholder,
  input[type=text][theme=text-primary]::-moz-placeholder, input[type=url][theme=text-primary]::-moz-placeholder, input[type=number][theme=text-primary]::-moz-placeholder, textarea[theme=text-primary]::-moz-placeholder {
    color: rgba(70, 70, 160, 0.5); }
  .sf-input[theme=text-primary]:-ms-input-placeholder,
  input:not([type])[theme=text-primary]:-ms-input-placeholder, input[type=email][theme=text-primary]:-ms-input-placeholder, input[type=password][theme=text-primary]:-ms-input-placeholder, input[type=search][theme=text-primary]:-ms-input-placeholder,
  input[type=text][theme=text-primary]:-ms-input-placeholder, input[type=url][theme=text-primary]:-ms-input-placeholder, input[type=number][theme=text-primary]:-ms-input-placeholder, textarea[theme=text-primary]:-ms-input-placeholder {
    color: rgba(70, 70, 160, 0.5); }
  .sf-input[theme=text-primary]::placeholder,
  input:not([type])[theme=text-primary]::placeholder, input[type=email][theme=text-primary]::placeholder, input[type=password][theme=text-primary]::placeholder, input[type=search][theme=text-primary]::placeholder,
  input[type=text][theme=text-primary]::placeholder, input[type=url][theme=text-primary]::placeholder, input[type=number][theme=text-primary]::placeholder, textarea[theme=text-primary]::placeholder {
    color: rgba(70, 70, 160, 0.5); }
  .sf-input[theme=primary]::-webkit-input-placeholder,
  input:not([type])[theme=primary]::-webkit-input-placeholder, input[type=email][theme=primary]::-webkit-input-placeholder, input[type=password][theme=primary]::-webkit-input-placeholder, input[type=search][theme=primary]::-webkit-input-placeholder,
  input[type=text][theme=primary]::-webkit-input-placeholder, input[type=url][theme=primary]::-webkit-input-placeholder, input[type=number][theme=primary]::-webkit-input-placeholder, textarea[theme=primary]::-webkit-input-placeholder {
    color: rgba(248, 248, 252, 0.5); }
  .sf-input[theme=primary]::-moz-placeholder,
  input:not([type])[theme=primary]::-moz-placeholder, input[type=email][theme=primary]::-moz-placeholder, input[type=password][theme=primary]::-moz-placeholder, input[type=search][theme=primary]::-moz-placeholder,
  input[type=text][theme=primary]::-moz-placeholder, input[type=url][theme=primary]::-moz-placeholder, input[type=number][theme=primary]::-moz-placeholder, textarea[theme=primary]::-moz-placeholder {
    color: rgba(248, 248, 252, 0.5); }
  .sf-input[theme=primary]:-ms-input-placeholder,
  input:not([type])[theme=primary]:-ms-input-placeholder, input[type=email][theme=primary]:-ms-input-placeholder, input[type=password][theme=primary]:-ms-input-placeholder, input[type=search][theme=primary]:-ms-input-placeholder,
  input[type=text][theme=primary]:-ms-input-placeholder, input[type=url][theme=primary]:-ms-input-placeholder, input[type=number][theme=primary]:-ms-input-placeholder, textarea[theme=primary]:-ms-input-placeholder {
    color: rgba(248, 248, 252, 0.5); }
  .sf-input[theme=primary]::placeholder,
  input:not([type])[theme=primary]::placeholder, input[type=email][theme=primary]::placeholder, input[type=password][theme=primary]::placeholder, input[type=search][theme=primary]::placeholder,
  input[type=text][theme=primary]::placeholder, input[type=url][theme=primary]::placeholder, input[type=number][theme=primary]::placeholder, textarea[theme=primary]::placeholder {
    color: rgba(248, 248, 252, 0.5); }
  .sf-input[theme=text-accent]::-webkit-input-placeholder,
  input:not([type])[theme=text-accent]::-webkit-input-placeholder, input[type=email][theme=text-accent]::-webkit-input-placeholder, input[type=password][theme=text-accent]::-webkit-input-placeholder, input[type=search][theme=text-accent]::-webkit-input-placeholder,
  input[type=text][theme=text-accent]::-webkit-input-placeholder, input[type=url][theme=text-accent]::-webkit-input-placeholder, input[type=number][theme=text-accent]::-webkit-input-placeholder, textarea[theme=text-accent]::-webkit-input-placeholder {
    color: rgba(219, 239, 47, 0.5); }
  .sf-input[theme=text-accent]::-moz-placeholder,
  input:not([type])[theme=text-accent]::-moz-placeholder, input[type=email][theme=text-accent]::-moz-placeholder, input[type=password][theme=text-accent]::-moz-placeholder, input[type=search][theme=text-accent]::-moz-placeholder,
  input[type=text][theme=text-accent]::-moz-placeholder, input[type=url][theme=text-accent]::-moz-placeholder, input[type=number][theme=text-accent]::-moz-placeholder, textarea[theme=text-accent]::-moz-placeholder {
    color: rgba(219, 239, 47, 0.5); }
  .sf-input[theme=text-accent]:-ms-input-placeholder,
  input:not([type])[theme=text-accent]:-ms-input-placeholder, input[type=email][theme=text-accent]:-ms-input-placeholder, input[type=password][theme=text-accent]:-ms-input-placeholder, input[type=search][theme=text-accent]:-ms-input-placeholder,
  input[type=text][theme=text-accent]:-ms-input-placeholder, input[type=url][theme=text-accent]:-ms-input-placeholder, input[type=number][theme=text-accent]:-ms-input-placeholder, textarea[theme=text-accent]:-ms-input-placeholder {
    color: rgba(219, 239, 47, 0.5); }
  .sf-input[theme=text-accent]::placeholder,
  input:not([type])[theme=text-accent]::placeholder, input[type=email][theme=text-accent]::placeholder, input[type=password][theme=text-accent]::placeholder, input[type=search][theme=text-accent]::placeholder,
  input[type=text][theme=text-accent]::placeholder, input[type=url][theme=text-accent]::placeholder, input[type=number][theme=text-accent]::placeholder, textarea[theme=text-accent]::placeholder {
    color: rgba(219, 239, 47, 0.5); }
  .sf-input[theme=accent]::-webkit-input-placeholder,
  input:not([type])[theme=accent]::-webkit-input-placeholder, input[type=email][theme=accent]::-webkit-input-placeholder, input[type=password][theme=accent]::-webkit-input-placeholder, input[type=search][theme=accent]::-webkit-input-placeholder,
  input[type=text][theme=accent]::-webkit-input-placeholder, input[type=url][theme=accent]::-webkit-input-placeholder, input[type=number][theme=accent]::-webkit-input-placeholder, textarea[theme=accent]::-webkit-input-placeholder {
    color: rgba(9, 9, 1, 0.5); }
  .sf-input[theme=accent]::-moz-placeholder,
  input:not([type])[theme=accent]::-moz-placeholder, input[type=email][theme=accent]::-moz-placeholder, input[type=password][theme=accent]::-moz-placeholder, input[type=search][theme=accent]::-moz-placeholder,
  input[type=text][theme=accent]::-moz-placeholder, input[type=url][theme=accent]::-moz-placeholder, input[type=number][theme=accent]::-moz-placeholder, textarea[theme=accent]::-moz-placeholder {
    color: rgba(9, 9, 1, 0.5); }
  .sf-input[theme=accent]:-ms-input-placeholder,
  input:not([type])[theme=accent]:-ms-input-placeholder, input[type=email][theme=accent]:-ms-input-placeholder, input[type=password][theme=accent]:-ms-input-placeholder, input[type=search][theme=accent]:-ms-input-placeholder,
  input[type=text][theme=accent]:-ms-input-placeholder, input[type=url][theme=accent]:-ms-input-placeholder, input[type=number][theme=accent]:-ms-input-placeholder, textarea[theme=accent]:-ms-input-placeholder {
    color: rgba(9, 9, 1, 0.5); }
  .sf-input[theme=accent]::placeholder,
  input:not([type])[theme=accent]::placeholder, input[type=email][theme=accent]::placeholder, input[type=password][theme=accent]::placeholder, input[type=search][theme=accent]::placeholder,
  input[type=text][theme=accent]::placeholder, input[type=url][theme=accent]::placeholder, input[type=number][theme=accent]::placeholder, textarea[theme=accent]::placeholder {
    color: rgba(9, 9, 1, 0.5); }
  .sf-input[theme=text-warn]::-webkit-input-placeholder,
  input:not([type])[theme=text-warn]::-webkit-input-placeholder, input[type=email][theme=text-warn]::-webkit-input-placeholder, input[type=password][theme=text-warn]::-webkit-input-placeholder, input[type=search][theme=text-warn]::-webkit-input-placeholder,
  input[type=text][theme=text-warn]::-webkit-input-placeholder, input[type=url][theme=text-warn]::-webkit-input-placeholder, input[type=number][theme=text-warn]::-webkit-input-placeholder, textarea[theme=text-warn]::-webkit-input-placeholder {
    color: rgba(216, 39, 39, 0.5); }
  .sf-input[theme=text-warn]::-moz-placeholder,
  input:not([type])[theme=text-warn]::-moz-placeholder, input[type=email][theme=text-warn]::-moz-placeholder, input[type=password][theme=text-warn]::-moz-placeholder, input[type=search][theme=text-warn]::-moz-placeholder,
  input[type=text][theme=text-warn]::-moz-placeholder, input[type=url][theme=text-warn]::-moz-placeholder, input[type=number][theme=text-warn]::-moz-placeholder, textarea[theme=text-warn]::-moz-placeholder {
    color: rgba(216, 39, 39, 0.5); }
  .sf-input[theme=text-warn]:-ms-input-placeholder,
  input:not([type])[theme=text-warn]:-ms-input-placeholder, input[type=email][theme=text-warn]:-ms-input-placeholder, input[type=password][theme=text-warn]:-ms-input-placeholder, input[type=search][theme=text-warn]:-ms-input-placeholder,
  input[type=text][theme=text-warn]:-ms-input-placeholder, input[type=url][theme=text-warn]:-ms-input-placeholder, input[type=number][theme=text-warn]:-ms-input-placeholder, textarea[theme=text-warn]:-ms-input-placeholder {
    color: rgba(216, 39, 39, 0.5); }
  .sf-input[theme=text-warn]::placeholder,
  input:not([type])[theme=text-warn]::placeholder, input[type=email][theme=text-warn]::placeholder, input[type=password][theme=text-warn]::placeholder, input[type=search][theme=text-warn]::placeholder,
  input[type=text][theme=text-warn]::placeholder, input[type=url][theme=text-warn]::placeholder, input[type=number][theme=text-warn]::placeholder, textarea[theme=text-warn]::placeholder {
    color: rgba(216, 39, 39, 0.5); }
  .sf-input[theme=warn]::-webkit-input-placeholder,
  input:not([type])[theme=warn]::-webkit-input-placeholder, input[type=email][theme=warn]::-webkit-input-placeholder, input[type=password][theme=warn]::-webkit-input-placeholder, input[type=search][theme=warn]::-webkit-input-placeholder,
  input[type=text][theme=warn]::-webkit-input-placeholder, input[type=url][theme=warn]::-webkit-input-placeholder, input[type=number][theme=warn]::-webkit-input-placeholder, textarea[theme=warn]::-webkit-input-placeholder {
    color: rgba(253, 246, 246, 0.5); }
  .sf-input[theme=warn]::-moz-placeholder,
  input:not([type])[theme=warn]::-moz-placeholder, input[type=email][theme=warn]::-moz-placeholder, input[type=password][theme=warn]::-moz-placeholder, input[type=search][theme=warn]::-moz-placeholder,
  input[type=text][theme=warn]::-moz-placeholder, input[type=url][theme=warn]::-moz-placeholder, input[type=number][theme=warn]::-moz-placeholder, textarea[theme=warn]::-moz-placeholder {
    color: rgba(253, 246, 246, 0.5); }
  .sf-input[theme=warn]:-ms-input-placeholder,
  input:not([type])[theme=warn]:-ms-input-placeholder, input[type=email][theme=warn]:-ms-input-placeholder, input[type=password][theme=warn]:-ms-input-placeholder, input[type=search][theme=warn]:-ms-input-placeholder,
  input[type=text][theme=warn]:-ms-input-placeholder, input[type=url][theme=warn]:-ms-input-placeholder, input[type=number][theme=warn]:-ms-input-placeholder, textarea[theme=warn]:-ms-input-placeholder {
    color: rgba(253, 246, 246, 0.5); }
  .sf-input[theme=warn]::placeholder,
  input:not([type])[theme=warn]::placeholder, input[type=email][theme=warn]::placeholder, input[type=password][theme=warn]::placeholder, input[type=search][theme=warn]::placeholder,
  input[type=text][theme=warn]::placeholder, input[type=url][theme=warn]::placeholder, input[type=number][theme=warn]::placeholder, textarea[theme=warn]::placeholder {
    color: rgba(253, 246, 246, 0.5); }
  .sf-input[disabled],
  input:not([type])[disabled], input[type=email][disabled], input[type=password][disabled], input[type=search][disabled],
  input[type=text][disabled], input[type=url][disabled], input[type=number][disabled], textarea[disabled] {
    cursor: not-allowed; }

/**
 * Big-ass panel to display a greeting image. Text content is underlayed for
 * easier reading.
 *
 *   <sf-jumbo style="background-image: url(...)">
 *     ...
 *   </sf-jumbo>
 *
 * By default, jumbo content is pushed to the bottom. This can be changed by
 * adjusting its justify-content property:
 *
 *   <sf-jumbo style="background-image: url(...)" layout="justify-start">
 *     ...
 *   </sf-jumbo>
 *
 * In this example, children will be at the top.
 */
sf-jumbo {
  /**
   * Layout.
   */
  height: 16em;
  font-size: 1.6em;
  /**
   * Inner layout.
   */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  /**
   * Colours. Unlike with many other elements, we don't derive jumbo colours
   * from base variables. Instead, we hardcode it to always have a dark
   * background and a light text with a dark underlay. The reason is that a
   * jumbo is used as a banner for images, and images don't load instantly.
   * The default background is displayed first. A light background creates a
   * more noticeable flicker effect, regardless of the overall theme of the
   * site. So a jumbo must remain dark.
   */
  background-color: #333333;
  color: #fcfcfc;
  /**
   * Immediate child styling.
   */ }
  sf-jumbo > * {
    background-color: rgba(5, 5, 5, 0.4);
    padding-left: 1rem;
    padding-right: 1rem; }
    sf-jumbo > *:first-child {
      padding-top: 1rem; }
    sf-jumbo > *:last-child {
      padding-bottom: 1rem; }

/**
 * A modal must have the exact following layout:
 *
 *   <sf-modal id="my-modal-id">
 *     <a href="#_"></a>
 *     <sf-modal-body>...</sf-modal-body>
 *   </sf-modal>
 *
 * To trigger the modal, you must link to its id:
 *
 *   <a href="#my-modal-id">...</a>
 *
 * The modal is active when the browser's URL fragment (the part starting with
 * #) points to its id. Clicking the overlay created by its inner <a> element
 * changes the fragment and hides the modal. The inner [href] must point to a
 * nonexistent id (like "#_") to prevent the browser from changing the scroll
 * position.
 */
/**
 * ToDo.
 *
 * Add attributes for controlling modal width.
 *
 * Consider adding JS to kill body scroll when a modal is opened and restore
 * when it's closed.
 *
 * Include a variant with a fixed header; the user should be able to fix
 * the position of an arbitrary descendant, not just an immediate child.
 */
sf-modal {
  /**
   * Layout.
   */
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1200;
  width: 0;
  height: 0; }
  sf-modal > a::before {
    content: '';
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(51, 51, 51, 0.4);
    cursor: default; }
  sf-modal > a::after {
    content: '✕';
    /**
       * Layout.
       */
    position: fixed;
    top: 5%;
    right: calc((100vw - 960px) / 2);
    width: 1.5rem;
    height: 1.5rem;
    z-index: 1201;
    /**
       * Inner layout.
       */
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around;
    border: 1px solid;
    border-top-right-radius: 0.2rem;
    opacity: 0.5;
    padding: 0.25rem;
    cursor: pointer; }
    @media (max-width: 960px) {
      sf-modal > a::after {
        right: 0; } }
  sf-modal sf-modal-body {
    /**
     * Layout.
     */
    display: block;
    position: fixed;
    top: 5%;
    bottom: 5%;
    /**
     * Mimic the body width.
     */
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
    max-width: 960px;
    padding: 1rem;
    border-radius: 0.2rem;
    box-shadow: 0 0.2rem 1.5rem -0.2rem rgba(5, 5, 5, 0.5);
    background-color: #fafafa;
    overflow: scroll; }
    sf-modal sf-modal-body > *:not(:last-child) {
      margin-bottom: 0.5rem; }
    sf-modal sf-modal-body > *:not(:first-child) {
      margin-top: 0.5rem; }
  sf-modal > a, sf-modal > sf-modal-body {
    opacity: 0;
    visibility: hidden;
    -webkit-transition-property: all;
            transition-property: all;
    -webkit-transition-duration: 0.2s;
            transition-duration: 0.2s;
    -webkit-transition-timing-function: ease;
            transition-timing-function: ease; }
  sf-modal:target > a, sf-modal:target > sf-modal-body, sf-modal.active > a, sf-modal.active > sf-modal-body {
    opacity: inherit;
    visibility: inherit; }

/**
 * Navigation bar. Has static and fixed versions, and can auto-collapse into
 * a dropdown when the screen is narrow.
 *
 *   <body>
 *     <sf-navbar>
 *       <a href=...>...</a>
 *       ...
 *     </sf-navbar>
 *     ...
 *   </body>
 */
/**
 * ToDo.
 * Document the expected structure and the collapsing dropdown feature.
 */
sf-navbar, sf-navtabs {
  /**
   * Layout.
   */
  width: 100%;
  min-height: 3.5rem;
  position: relative;
  /**
   * Inner layout.
   */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  font-size: 1.2em;
  text-align: center;
  background-color: #fafafa;
  box-shadow: 0 3px 6px -3px rgba(5, 5, 5, 0.4);
  /*------------------------------ Collapsing -------------------------------*/
  /**
   * These styles define the auto-collapsing feature. It allows the navbar to
   * automatically collapse past a certain nth child, turning the remaining
   * elements into a dropdown toggled with a button. Collapsing only happens
   * before a certain media breakpoint controlled by a variable. By default,
   * it matches the breakpoint used for other responsive layouts.
   *
   * To enable collapsing, the user must include two elements:
   * <input type="checkbox"> and <label>, which must be placed before the navbar
   * children that will be collapsed. The structure must be as follows:
   *
   *   <sf-navbar>
   *     <input id="my-navbar-toggle-id" type="checkbox">
   *     <label for="my-navbar-toggle-id"> ... [optional content] </label>
   *     ... [non-collapsing elements]
   *     ... [auto-collapsing elements]
   *   </sf-navbar>
   *
   * Where non-collapsing and collapsing elements are divided with the
   * `@sf-navbar-nth-child` variable, which specifies at which ordinal position
   * the children should be wrapped.
   *
   * The [id] and [for] attributes must match. The input is hidden and is used
   * for tracking and controlling the toggled state. The label is clickable and
   * controls the input. It's hidden when the navbar is not collapsed.
   */
  /**
   * Base label styles.
   */
  /**
   * Active label styles.
   */
  /**
   * Styles for post-label children that only apply before the media breakpoint.
   */ }
  sf-navbar.navbar-fixed, sf-navtabs.navbar-fixed {
    /**
     * Layout.
     */
    position: fixed;
    top: 0;
    z-index: 1000;
    max-width: 960px;
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto; }
    sf-navbar.navbar-fixed + *, sf-navtabs.navbar-fixed + * {
      margin-top: 3.5rem; }
  sf-navbar > *, sf-navtabs > * {
    /**
     * Layout.
     */
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    min-height: inherit;
    /**
     * Inner layout.
     */
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around;
    padding: 0.5rem; }
  sf-navbar > input[type=checkbox], sf-navtabs > input[type=checkbox] {
    display: none; }
  sf-navbar > input[type=checkbox] + label, sf-navtabs > input[type=checkbox] + label {
    /**
     * Layout.
     */
    -webkit-box-flex: 0;
    -webkit-flex: none;
        -ms-flex: none;
            flex: none;
    min-width: 10%;
    display: none;
    -webkit-box-ordinal-group: 2;
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1;
    cursor: pointer; }
    sf-navbar > input[type=checkbox] + label::before, sf-navtabs > input[type=checkbox] + label::before {
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      opacity: 0; }
    sf-navbar > input[type=checkbox] + label::after, sf-navtabs > input[type=checkbox] + label::after {
      content: '▽';
      display: inline-block;
      vertical-align: middle; }
    sf-navbar > input[type=checkbox] + label:not(:empty)::after, sf-navtabs > input[type=checkbox] + label:not(:empty)::after {
      padding-left: 0.5em; }
  sf-navbar > input[type=checkbox]:checked + label::before, sf-navtabs > input[type=checkbox]:checked + label::before {
    content: ''; }
  sf-navbar > input[type=checkbox]:checked + label::after, sf-navtabs > input[type=checkbox]:checked + label::after {
    content: '▲'; }
  @media (max-width: 600px) {
    sf-navbar, sf-navtabs {
      /**
     * Base styles.
     */
      /**
     * Active styles.
     */ }
      sf-navbar > input[type=checkbox] + label, sf-navtabs > input[type=checkbox] + label {
        display: inherit; }
      sf-navbar > input[type=checkbox] + label ~ *:nth-child(n+6), sf-navtabs > input[type=checkbox] + label ~ *:nth-child(n+6) {
        /**
       * Layout.
       */
        -webkit-box-flex: 100%;
        -webkit-flex: 100%;
            -ms-flex: 100%;
                flex: 100%;
        -webkit-box-ordinal-group: 3;
        -webkit-order: 2;
            -ms-flex-order: 2;
                order: 2;
        height: 0;
        min-height: 0;
        padding: 0;
        -webkit-transform: scaleY(0);
            -ms-transform: scaleY(0);
                transform: scaleY(0);
        -webkit-transition-property: all;
                transition-property: all;
        -webkit-transition-duration: 0.2s;
                transition-duration: 0.2s;
        -webkit-transition-timing-function: ease;
                transition-timing-function: ease; }
      sf-navbar > input[type=checkbox]:checked + label ~ *:nth-child(n+6), sf-navtabs > input[type=checkbox]:checked + label ~ *:nth-child(n+6) {
        height: auto;
        padding: 1rem;
        -webkit-transform: scaleY(1);
            -ms-transform: scaleY(1);
                transform: scaleY(1); } }
  sf-navbar[sf-fold], sf-navtabs[sf-fold] {
    /**
     * Base styles.
     */
    /**
     * Active styles.
     */ }
    sf-navbar[sf-fold] > input[type=checkbox] + label, sf-navtabs[sf-fold] > input[type=checkbox] + label {
      display: inherit; }
    sf-navbar[sf-fold] > input[type=checkbox] + label ~ *:nth-child(n+6), sf-navtabs[sf-fold] > input[type=checkbox] + label ~ *:nth-child(n+6) {
      /**
       * Layout.
       */
      -webkit-box-flex: 100%;
      -webkit-flex: 100%;
          -ms-flex: 100%;
              flex: 100%;
      -webkit-box-ordinal-group: 3;
      -webkit-order: 2;
          -ms-flex-order: 2;
              order: 2;
      height: 0;
      min-height: 0;
      padding: 0;
      -webkit-transform: scaleY(0);
          -ms-transform: scaleY(0);
              transform: scaleY(0);
      -webkit-transition-property: all;
              transition-property: all;
      -webkit-transition-duration: 0.2s;
              transition-duration: 0.2s;
      -webkit-transition-timing-function: ease;
              transition-timing-function: ease; }
    sf-navbar[sf-fold] > input[type=checkbox]:checked + label ~ *:nth-child(n+6), sf-navtabs[sf-fold] > input[type=checkbox]:checked + label ~ *:nth-child(n+6) {
      height: auto;
      padding: 1rem;
      -webkit-transform: scaleY(1);
          -ms-transform: scaleY(1);
              transform: scaleY(1); }

/**
 * Navigation tabs for use anywhere on the website. Usage is identical to the
 * navbar; see the `sf-navbar.scss` docs.
 *
 *   <sf-navtabs>
 *     <a href=...>...</a>
 *     ...
 *   </sf-navtabs>
 */
sf-navtabs {
  box-shadow: 0 0 4px -1px rgba(5, 5, 5, 0.5); }
  sf-navtabs:not(.navbar-fixed) {
    z-index: auto; }

/**
 * sf-tabset is your typical tabbed panel. It has several modes with slightly
 * different markup requirements but near-identical behaviour.
 *
 * # :checked version
 *
 * One way to use a tabset is with hidden radio inputs. It must have the exact
 * following layout:
 *
 *   <sf-tabset>
 *     ...
 *     <input id=... type="radio" name=...>
 *     <label for=...>...</label>
 *     <sf-tab>...</sf-tab>
 *     ...
 *   </sf-tabset>
 *
 * The three elements: <input>, <label> and <sf-tab>, in this exact order,
 * must be the only children in an <sf-tabset>, repeating indefinitely.
 *
 * Each <input> must have the following attributes:
 *   <input id="..." name="..." type="radio">
 *
 *   [type="radio"] enables tab switching.
 *   [name="..."]   links the radio inputs together; inputs in one tabset must
 *                  share the same name.
 *   [id="..."]     lets us link a label with the given input, so that clicking
 *                  the label toggles the input.
 *   [checked]      optional; preselects a tab.
 *
 * Each <label> must have the following attribute:
 *   <label for="...">
 *
 *   [for="..."] the value must match the id of the preceding <input>.
 *
 * Each <sf-tab> must immediately follow its <input> and <label>.
 *
 * # .active version
 *
 * You can skip <input>s entirely if you switch tabs by assigning `.active` to
 * the <label>s with JavaScript. This may be desirable to work around browser
 * bugs, or to avoid using [id] attributes, which this version doesn't need.
 *
 * Layout:
 *
 *   <sf-tabset>
 *     ...
 *     <label>...</label>
 *     <sf-tab>...</sf-tab>
 *     ...
 *     <label class="active">...</label>
 *     <sf-tab>...</sf-tab>
 *     ...
 *   </sf-tabset>
 *
 * # :target version
 *
 * This version uses <a id="..." href="#..."> tags instead of labels, and relies
 * on the :target selector for active state. Each anchor must have a unique [id]
 * and a [href] linking to that id.
 *
 * This messes around with the URL AND with the window scroll position. You
 * should only use this if you want to actually link to tabs from other places.
 *
 * Layout:
 *
 *   <sf-tabset>
 *     ...
 *     <a id="..." href="#...">...</a>
 *     <sf-tab>...</sf-tab>
 *     ...
 *   </sf-tabset>
 *
 * Each [id] must be unique and the [href] must match it.
 */
sf-tabset {
  /**
   * Inner layout.
   */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  box-shadow: 0 0 4px -1px rgba(5, 5, 5, 0.5);
  /**
   * Base tab styles.
   */
  /**
   * Base body styles.
   */
  /**
   * Active tab highlighting.
   */
  /**
   * Active body styles.
   */ }
  sf-tabset > input[type=radio] {
    display: none; }
  sf-tabset > label, sf-tabset > a[href*='#'] {
    /**
     * Layout.
     */
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-box-ordinal-group: 0;
    -webkit-order: -1;
        -ms-flex-order: -1;
            order: -1;
    height: 3em;
    /**
     * Inner layout.
     */
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around;
    /**
     * Cosmetic.
     */
    cursor: pointer;
    outline: 1px solid rgba(5, 5, 5, 0.1);
    padding: 1rem; }
  sf-tabset > sf-tab {
    /**
     * Layout.
     */
    width: 100%;
    -webkit-box-ordinal-group: 2;
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1;
    min-height: 3em;
    /**
     * Cosmetic.
     */
    outline: 1px solid rgba(5, 5, 5, 0.1);
    padding: 1rem; }
    sf-tabset > sf-tab:not(:root) {
      display: none; }
    sf-tabset > sf-tab > *:not(:last-child) {
      margin-bottom: 0.5rem; }
    sf-tabset > sf-tab > *:not(:first-child) {
      margin-top: 0.5rem; }
  sf-tabset > input[type=radio]:checked + label {
    background-color: rgba(5, 5, 5, 0.1); }
    sf-tabset > input[type=radio]:checked + label[theme=text-primary] {
      color: #272759; }
    sf-tabset > input[type=radio]:checked + label[theme=primary] {
      background-color: #6e6ec0;
      color: #f8f8fc; }
    sf-tabset > input[type=radio]:checked + label[theme=text-accent] {
      color: #6b7609; }
    sf-tabset > input[type=radio]:checked + label[theme=accent] {
      background-color: #c5da11;
      color: #090901; }
    sf-tabset > input[type=radio]:checked + label[theme=text-warn] {
      color: #661919; }
    sf-tabset > input[type=radio]:checked + label[theme=warn] {
      background-color: #b32c2c;
      color: #fdf7f7; }
  sf-tabset > a[href*='#']:target {
    background-color: rgba(5, 5, 5, 0.1); }
    sf-tabset > a[href*='#']:target[theme=text-primary] {
      color: #272759; }
    sf-tabset > a[href*='#']:target[theme=primary] {
      background-color: #6e6ec0;
      color: #f8f8fc; }
    sf-tabset > a[href*='#']:target[theme=text-accent] {
      color: #6b7609; }
    sf-tabset > a[href*='#']:target[theme=accent] {
      background-color: #c5da11;
      color: #090901; }
    sf-tabset > a[href*='#']:target[theme=text-warn] {
      color: #661919; }
    sf-tabset > a[href*='#']:target[theme=warn] {
      background-color: #b32c2c;
      color: #fdf7f7; }
  sf-tabset > input[type=radio]:checked + label + sf-tab,
  sf-tabset > .active + sf-tab,
  sf-tabset > a[href*='#']:target + sf-tab {
    display: block; }
    sf-tabset > input[type=radio]:checked + label + sf-tab.flex,
    sf-tabset > .active + sf-tab.flex,
    sf-tabset > a[href*='#']:target + sf-tab.flex {
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex; }

/**
 *
 * # Usage
 *
 * A tooltip is invoked with an attribute, like so:
 *
 *   <p sf-tooltip="tooltip text">hover me</p>
 *
 *
 * ## Position
 *
 * By default, it's positioned above the host element. It can be moved to the
 * bottom with another attribute:
 *
 *   <p sf-tooltip="tooltip text" sf-position="bottom">hover me</p>
 *
 * The following positions are supported: top, top-right, right-top, left-top,
 * bottom, bottom-right.
 *
 *
 * ## Trigger
 *
 * By default, the tooltip is triggered with :hover. You can specify other
 * triggers with another attribute:
 *
 *   <p sf-tooltip="tooltip text" contenteditable
 *      sf-trigger="hover focus">hover or focus me</p>
 *
 * The following triggers are supported: :active, :disabled, :focus, :hover,
 * :target. You can also include 'true' to make the tooltip visible at all
 * times.
 *
 *
 * # Limitations
 *
 * This implementation uses the ::after pseudoelement. This doesn't require any
 * additional markup for most elements, but doesn't work with
 * <input type="text"> and <textarea> since they can't have children. For the
 * :hover and :active versions, you can work around this by wrapping the input
 * into a parent element and applying the tooltip attributes to the parent.
 * These states naturally propagate from the input to the parent, and the
 * tooltip will be visible. However, this won't work for :focus, :disabled,
 * and, most likely, :target, since these states don't propagate to parents.
 *
 * Example of using a tooltip with an input:
 *
 *   <p sf-tooltip="tooltip text">
 *     <input>
 *   </p>
 *
 * It also sets {position: relative} on the host.
 */
/**
 * ToDo.
 *
 * Add triangles.
 *
 * Look for ways to implement tooltips that work with <input type="text"> and
 * <textarea> without involving parents (siblings and attributes only). I think
 * there's something in CSS4 that might help.
 */
[sf-tooltip] {
  /**
   * Layout.
   */
  position: relative;
  /**
   * Tooltip positioning.
   */
  /**
   * Triggered state styles. In the absence of a trigger attribute, the
   * tooltip is triggered by hovering the host. Trigger indicators may be
   * combined like so:
   *
   *   <button sf-tooltip="tooltip text"
   *           sf-trigger="hover focus">hover or focus me</button>
   */ }
  [sf-tooltip][sf-tooltip='']::after {
    content: none; }
  [sf-tooltip]::after {
    content: attr(sf-tooltip);
    /**
     * Layout.
     */
    position: absolute;
    z-index: 1300;
    opacity: 0;
    visibility: hidden;
    -webkit-transition-property: all;
            transition-property: all;
    -webkit-transition-duration: 0.2s;
            transition-duration: 0.2s;
    -webkit-transition-timing-function: ease;
            transition-timing-function: ease;
    font-size: 80%;
    padding: 0.4rem;
    background-color: #050505;
    color: #fafafa;
    border-radius: 0.16rem; }
  [sf-tooltip]:not([sf-position])::after,
  [sf-tooltip][sf-position=top]::after {
    bottom: calc(100% + 0.5em);
    left: 0; }
  [sf-tooltip][sf-position=top-right]::after {
    bottom: calc(100% + 0.5em);
    right: 0; }
  [sf-tooltip][sf-position=right-top]::after {
    top: 0;
    left: calc(100% + 0.5em); }
  [sf-tooltip][sf-position=left-top]::after {
    top: 0;
    right: calc(100% + 0.5em); }
  [sf-tooltip][sf-position=bottom]::after {
    top: calc(100% + 0.5em);
    left: 0; }
  [sf-tooltip][sf-position=bottom-right]::after {
    top: calc(100% + 0.5em);
    right: 0; }
  [sf-tooltip]:not([sf-trigger]):hover::after,
  [sf-tooltip][sf-trigger~=active]:active::after,
  [sf-tooltip][sf-trigger~=disabled]:disabled::after,
  [sf-tooltip][sf-trigger~=focus]:focus::after,
  [sf-tooltip][sf-trigger~=hover]:hover::after,
  [sf-tooltip][sf-trigger~=target]:target::after,
  [sf-tooltip][sf-trigger~=true]::after {
    opacity: inherit;
    visibility: inherit; }
