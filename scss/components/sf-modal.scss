/**
 * A modal must have the following layout:
 *
 *   <sf-modal id="myModal">
 *     <sf-modal-body>...</sf-modal-body>
 *   </sf-modal>
 *
 * To trigger the modal, you need an element with [sf-toggle-id]:
 *
 *   <button sf-toggle-id="myModal">...</button>
 *
 * To close the modal, click the overlay or the close button.
 */

/**
 * ToDo.
 *
 * Add attributes for controlling modal width.
 *
 * Kill the body scroll while a modal is open and restore when it's closed.
 *
 * Include a variant with a fixed header; the user should be able to fix
 * the position of an arbitrary descendant, not just an immediate child.
 */

sf-modal,
[sf-modal] {

  /**
   * Layout.
   */
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  z-index: $sf-z-index-modal;
  // Collapse dimensions.
  width: 0;
  height: 0;

  // Overlay when active.
  &.active::before {
    content: '';
    // Layout.
    @include sf-fixed-overlay;

    // Backdrop. Unlike shadows, we don't derive the overlay colour from the
    // text colour, this ends up looking ridiculous with some tints. Instead,
    // we hardcode it to be grayscale.
    background: rgba($sf-color-umbra, 0.4);

    // Standard cursor.
    cursor: default;
  }

  // Close button when active.
  &.active::after {
    content: 'âœ•';

    /**
     * Layout.
     */
    position: fixed;
    // Position this element in the top right corner of the modal.
    top: 5%;
    right: unquote('calc((100vw - #{$sf-body-max-width}) / 2)');
    @media (max-width: $sf-body-max-width) {right: 0}
    width: $sf-space + $sf-space / 2;
    height: $sf-space + $sf-space / 2;
    // Stack just above the modal.
    z-index: $sf-z-index-modal + 1;

    /**
     * Inner layout.
     */
    @include sf-flex-host-center;

    // Cosmetic.
    border: 1px solid;
    border-top-right-radius: $sf-border-radius;
    opacity: 0.5;
    padding: $sf-space / 4;
    @include sf-cursor-interactive;
  }

  // Body styling.
  sf-modal-body,
  [sf-modal-body] {
    /**
     * Layout.
     */
    display: block;
    position: fixed;
    top: 5%;
    bottom: 5%;
    /**
     * Mimic the body width.
     */
    // Setting left and right to 0 enables automatic margins.
    left: 0;
    right: 0;
    // Center horizontally.
    margin-left: auto;
    margin-right: auto;
    // Limit the width in the same way as `body` in `layout.scss`.
    max-width: $sf-body-max-width;

    // Cosmetic.
    padding: $sf-space;
    @include sf-space-out-vertical;
    border-radius: $sf-border-radius;
    @include sf-shadow-medium;

    // Default background colour. This is overridden when using a colour class
    // on the modal or on the body.
    background-color: $sf-color-background;

    // Let the content scroll.
    overflow: scroll;
  }

  // Default body visibility.
  > sf-modal-body, > [sf-modal-body] {
    // Hidden unless active. Both opacity and visibility are required to animate
    // the visibility change.
    opacity: 0;
    visibility: hidden;
    // Animate visibility changes.
    @include sf-transitions(all);
  }

  // Active body visibility.
  &.active > sf-modal-body, &.active > [sf-modal-body] {
    // Display. Both opacity and visibility are required to animate the
    // visibility change.
    opacity: inherit;
    visibility: inherit;
  }
}
