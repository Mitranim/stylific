/**
 * <sf-collapse> is a vertically collapsing element with a toggle.
 *
 *
 * # Basic usage
 *
 * Must have the exact following layout:
 *
 *   <sf-collapse>
 *     <input id="..." type="checkbox">
 *     <label for="...">...</label>
 *     <sf-collapse-body>
 *       ...
 *     </sf-collapse-body>
 *   </sf-collapse>
 *
 * The <input> is hidden and serves as a state vector. The [id] and [for]
 * attributes must match. The <label> may have arbitrary content. The collapsing
 * part is everything following the label.
 *
 * Mark the <input> as [checked] to uncollapse the element by default:
 *
 *   <sf-collapse>
 *     <input checked id="..." type="checkbox">
 *     <label for="...">...</label>
 *     <sf-collapse-body>
 *       ...
 *     </sf-collapse-body>
 *   </sf-collapse>
 *
 *
 * # Options
 *
 * Has an option to enable an overlay that collapses the element when clicking
 * anywhere outside.
 *
 *   <sf-collapse sf-collapse="overlay">
 *     ...
 *   </sf-collapse>
 */

#{$sf-prefix}-collapse,
[#{$sf-prefix}-collapse] {

  /**
   * Layout.
   */
  display: flex;
  flex-direction: column;

  // Whitespace.
  > label {padding: $sf-space}

  // Hide the checkbox input used for toggling collapsed state.
  > input[type=checkbox] {display: none}

  /**
   * Base label styles.
   */
  > label {
    /**
     * Layout.
     */
    display: block;

    // Cosmetic.
    @include sf-cursor-interactive;

    // Toggle indicator.
    &::after {
      content: '▽';
      display: inline-block;
      vertical-align: middle;
      opacity: 0.5;
    }
    // If there's some text inside, offset the indicator.
    &:not(:empty)::after {
      padding-left: 0.5em;
    }
  }

  /**
   * Active label styles.
   */
  > input[type=checkbox]:checked + label,
  > label.active {
    // Modify the indicator symbol.
    &::after {content: '▲'}
    // Treat as .active.
    @include sf-register-selected-state;
  }

  /**
   * Base overlay styles.
   */
  &[#{$sf-prefix}-collapse~=overlay] > label::before {
    @include sf-fixed-overlay;
    opacity: 0;
  }

  /**
   * Active overlay styles.
   */
  // If the overlay option is enabled, make the toggle overlay interactive.
  &[#{$sf-prefix}-collapse~=overlay] > input[type=checkbox]:checked + label,
  &[#{$sf-prefix}-collapse~=overlay] > label.active {
    &::before {content: ''}
  }

  /**
   * Body styles.
   */
  // Base.
  > #{$sf-prefix}-collapse-body,
  > [#{$sf-prefix}-collapse-body] {
    padding: $sf-space;
  }
  // Collapsed.
  > label:first-child:not(.active) ~ #{$sf-prefix}-collapse-body,
  > label:first-child:not(.active) ~ [#{$sf-prefix}-collapse-body],
  > input[type=checkbox]:not(:checked) + label ~ #{$sf-prefix}-collapse-body,
  > input[type=checkbox]:not(:checked) + label ~ [#{$sf-prefix}-collapse-body] {
    padding-top: 0;
    padding-bottom: 0;
    max-height: 0;
    transform: scaleY(0);
  }
  // Active.
  > input[type=checkbox]:checked ~ #{$sf-prefix}-collapse-body,
  > input[type=checkbox]:checked ~ [#{$sf-prefix}-collapse-body],
  > label.active ~ #{$sf-prefix}-collapse-body,
  > label.active ~ [#{$sf-prefix}-collapse-body] {
    transform: scaleY(1);
  }

  // Animate visibility changes on children. Also include colour animations for
  // interactive parts. Can't afford to animate `all` because padding seriously
  // messes up the FPS. Include other common transitions.
  > * {@include sf-transitions(transform, color, background-color, outline, shadow, border);}
}
